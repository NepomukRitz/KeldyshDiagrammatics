<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="d8/d2c/classIntegrandSE" kind="class" language="C++" prot="public">
    <compoundname>IntegrandSE</compoundname>
    <includes refid="de/d65/integrandSE_8hpp" local="no">integrandSE.hpp</includes>
    <templateparamlist>
      <param>
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">typename</ref> Q</type>
      </param>
      <param>
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">typename</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">vertType</ref></type>
      </param>
      <param>
        <type><ref refid="d9/db9/classbool" kindref="compound">bool</ref></type>
        <declname>all_spins</declname>
        <defname>all_spins</defname>
      </param>
      <param>
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">typename</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">return_type</ref></type>
      </param>
      <param>
        <type><ref refid="d9/db9/classbool" kindref="compound">bool</ref></type>
        <declname>version</declname>
        <defname>version</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="d8/d2c/classIntegrandSE_1a6400ef36a46d90c0bf680324c3ad25c7" prot="private" static="no">
        <type>Eigen::Matrix&lt; Q, 1, 4 &gt;</type>
        <definition>using IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::buffertype_propagator =  Eigen::Matrix&lt;Q,1,4&gt;</definition>
        <argsstring></argsstring>
        <name>buffertype_propagator</name>
        <qualifiedname>IntegrandSE::buffertype_propagator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loop/integrandSE.hpp" line="39" column="5" bodyfile="loop/integrandSE.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d8/d2c/classIntegrandSE_1a5994c1580efa9b681cee75cb521cdd04" prot="private" static="no">
        <type>Eigen::Matrix&lt; Q, 4, <ref refid="d7/d59/data__structures_8hpp_1a084db757c851a2c804cb57464b288a5a" kindref="member">myColsAtCompileTime</ref>&lt; <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">return_type</ref> &gt;()&gt;</type>
        <definition>using IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::buffertype_vertex =  Eigen::Matrix&lt;Q,4,myColsAtCompileTime&lt;return_type&gt;()&gt;</definition>
        <argsstring></argsstring>
        <name>buffertype_vertex</name>
        <qualifiedname>IntegrandSE::buffertype_vertex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loop/integrandSE.hpp" line="40" column="5" bodyfile="loop/integrandSE.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d8/d2c/classIntegrandSE_1a4b066673957b16c34d2b888cfd24aeb4" prot="private" static="no" mutable="no">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> int</type>
        <definition>const int IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <qualifiedname>IntegrandSE::type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loop/integrandSE.hpp" line="46" column="15" bodyfile="loop/integrandSE.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d2c/classIntegrandSE_1aec931bc804234d48123926a082ca412e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::components</definition>
        <argsstring></argsstring>
        <name>components</name>
        <qualifiedname>IntegrandSE::components</qualifiedname>
        <initializer>= std::vector&lt;int&gt;((<ref refid="d1/df8/master__parameters_8hpp_1a209c004ba9b216412cae0ca89758f1a9" kindref="member">CONTOUR_BASIS</ref> != 1 ? 6 : 16))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loop/integrandSE.hpp" line="47" column="17" bodyfile="loop/integrandSE.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d2c/classIntegrandSE_1aa1035e85c1b6e3e9bac48db1d74e865b" prot="private" static="no" mutable="no">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">vertType</ref> &amp;</type>
        <definition>const vertType&amp; IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::vertex</definition>
        <argsstring></argsstring>
        <name>vertex</name>
        <qualifiedname>IntegrandSE::vertex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loop/integrandSE.hpp" line="49" column="20" bodyfile="loop/integrandSE.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d2c/classIntegrandSE_1aca04a0c8f180e882e2bd87a2ef26eae9" prot="private" static="no" mutable="no">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d2/d34/classPropagator" kindref="compound">Propagator</ref>&lt; Q &gt; &amp;</type>
        <definition>const Propagator&lt;Q&gt;&amp; IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::propagator</definition>
        <argsstring></argsstring>
        <name>propagator</name>
        <qualifiedname>IntegrandSE::propagator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loop/integrandSE.hpp" line="50" column="22" bodyfile="loop/integrandSE.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d2c/classIntegrandSE_1a77f1ffc08d9a81d16082c462cca5eaac" prot="private" static="no" mutable="no">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> int</type>
        <definition>const int IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::iK</definition>
        <argsstring></argsstring>
        <name>iK</name>
        <qualifiedname>IntegrandSE::iK</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loop/integrandSE.hpp" line="52" column="15" bodyfile="loop/integrandSE.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d2c/classIntegrandSE_1a034abdbf754a84d38e8bd88472bc9545" prot="private" static="no" mutable="no">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> double</type>
        <definition>const double IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::v</definition>
        <argsstring></argsstring>
        <name>v</name>
        <qualifiedname>IntegrandSE::v</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loop/integrandSE.hpp" line="53" column="18" bodyfile="loop/integrandSE.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d2c/classIntegrandSE_1a8645f5bd961783a3d8e5c6d7ccd3f50c" prot="private" static="no" mutable="no">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> int</type>
        <definition>const int IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::i_in</definition>
        <argsstring></argsstring>
        <name>i_in</name>
        <qualifiedname>IntegrandSE::i_in</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loop/integrandSE.hpp" line="54" column="15" bodyfile="loop/integrandSE.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d2c/classIntegrandSE_1af5db8b590062b93536ede7ab2c70e95b" prot="private" static="no" mutable="no">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> int</type>
        <definition>const int IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::i_spin</definition>
        <argsstring></argsstring>
        <name>i_spin</name>
        <qualifiedname>IntegrandSE::i_spin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loop/integrandSE.hpp" line="55" column="15" bodyfile="loop/integrandSE.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d2c/classIntegrandSE_1a1db4f700599a0bc468ad9c959893f280" prot="private" static="no" mutable="no">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> int</type>
        <definition>const int IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::i0_vertex_left</definition>
        <argsstring></argsstring>
        <name>i0_vertex_left</name>
        <qualifiedname>IntegrandSE::i0_vertex_left</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loop/integrandSE.hpp" line="56" column="15" bodyfile="loop/integrandSE.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d2c/classIntegrandSE_1add96d050e65a8b1c3d339aa3afe7ce26" prot="private" static="no" mutable="no">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> int</type>
        <definition>const int IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::i0_vertex_right</definition>
        <argsstring></argsstring>
        <name>i0_vertex_right</name>
        <qualifiedname>IntegrandSE::i0_vertex_right</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loop/integrandSE.hpp" line="57" column="15" bodyfile="loop/integrandSE.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d2c/classIntegrandSE_1a2f9648b894ad1a4de39aead0a834bc07" prot="private" static="no" mutable="no">
        <type>Eigen::Matrix&lt; Q, 4, 4 &gt;</type>
        <definition>Eigen::Matrix&lt;Q,4, 4&gt; IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::transform_to_KeldyshBasis</definition>
        <argsstring></argsstring>
        <name>transform_to_KeldyshBasis</name>
        <qualifiedname>IntegrandSE::transform_to_KeldyshBasis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loop/integrandSE.hpp" line="58" column="19" bodyfile="loop/integrandSE.hpp" bodystart="58" bodyend="-1"/>
        <referencedby refid="d8/d2c/classIntegrandSE_1ad2fbb082e879d192ef8e85cc002a4b01" compoundref="de/d65/integrandSE_8hpp" startline="92" endline="105">IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::IntegrandSE</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="d8/d2c/classIntegrandSE_1a32c7d650e0ce2b9879a4c5331fafccfe" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">void</ref></type>
        <definition>void IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::set_Keldysh_components_to_be_calculated</definition>
        <argsstring>()</argsstring>
        <name>set_Keldysh_components_to_be_calculated</name>
        <qualifiedname>IntegrandSE::set_Keldysh_components_to_be_calculated</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loop/integrandSE.hpp" line="60" column="10" bodyfile="loop/integrandSE.hpp" bodystart="121" bodyend="222"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <referencedby refid="d8/d2c/classIntegrandSE_1ad2fbb082e879d192ef8e85cc002a4b01" compoundref="de/d65/integrandSE_8hpp" startline="92" endline="105">IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::IntegrandSE</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d2c/classIntegrandSE_1a444b7d1c9b8aab5db6b2fa69a5a62f43" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">return_type</ref></type>
        <definition>auto IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::Keldysh_value</definition>
        <argsstring>(double vp) const</argsstring>
        <name>Keldysh_value</name>
        <qualifiedname>IntegrandSE::Keldysh_value</qualifiedname>
        <param>
          <type>double</type>
          <declname>vp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loop/integrandSE.hpp" line="62" column="17" bodyfile="loop/integrandSE.hpp" bodystart="301" bodyend="343"/>
        <references refid="d1/df8/master__parameters_8hpp_1a209c004ba9b216412cae0ca89758f1a9" compoundref="d1/df8/master__parameters_8hpp" startline="20">CONTOUR_BASIS</references>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
      </memberdef>
      <memberdef kind="function" id="d8/d2c/classIntegrandSE_1afcd4503b9ab023d78c78c37293847030" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Q</type>
        <definition>auto IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::Matsubara_value</definition>
        <argsstring>(double vp) const</argsstring>
        <name>Matsubara_value</name>
        <qualifiedname>IntegrandSE::Matsubara_value</qualifiedname>
        <param>
          <type>double</type>
          <declname>vp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loop/integrandSE.hpp" line="63" column="7" bodyfile="loop/integrandSE.hpp" bodystart="346" bodyend="361"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d1/df8/master__parameters_8hpp_1ac209459b6113297c093b5c50febc47ad" compoundref="d1/df8/master__parameters_8hpp" startline="148">PARTICLE_HOLE_SYMMETRY</references>
      </memberdef>
      <memberdef kind="function" id="d8/d2c/classIntegrandSE_1a60ce205e5413c94ff37f40972f80ea7d" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">void</ref></type>
        <definition>void IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::evaluate_propagator</definition>
        <argsstring>(Q &amp;Gi, const int iK, const double vp) const</argsstring>
        <name>evaluate_propagator</name>
        <qualifiedname>IntegrandSE::evaluate_propagator</qualifiedname>
        <param>
          <type>Q &amp;</type>
          <declname>Gi</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> int</type>
          <declname>iK</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> double</type>
          <declname>vp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loop/integrandSE.hpp" line="65" column="10" bodyfile="loop/integrandSE.hpp" bodystart="364" bodyend="382"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d59/data__structures_8hpp_1a769c275d7647a628a4bad2041e0fc27f" compoundref="d7/d59/data__structures_8hpp" startline="102" endline="102">myconj</references>
      </memberdef>
      <memberdef kind="function" id="d8/d2c/classIntegrandSE_1a7ed8d72a0aa4ad1c6c4e5e437c3265ae" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">void</ref></type>
        <definition>void IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::evaluate_propagator</definition>
        <argsstring>(Q &amp;GM, const double vp) const</argsstring>
        <name>evaluate_propagator</name>
        <qualifiedname>IntegrandSE::evaluate_propagator</qualifiedname>
        <param>
          <type>Q &amp;</type>
          <declname>GM</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> double</type>
          <declname>vp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loop/integrandSE.hpp" line="66" column="10" bodyfile="loop/integrandSE.hpp" bodystart="385" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="d8/d2c/classIntegrandSE_1a187351bd93e9dcef16ff6738769ecb9e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">auto</ref></type>
        <definition>auto IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::evaluate_propagator_vectorized</definition>
        <argsstring>(const double vp) const -&gt; buffertype_propagator</argsstring>
        <name>evaluate_propagator_vectorized</name>
        <qualifiedname>IntegrandSE::evaluate_propagator_vectorized</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> double</type>
          <declname>vp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loop/integrandSE.hpp" line="67" column="10" bodyfile="loop/integrandSE.hpp" bodystart="390" bodyend="394"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
      </memberdef>
      <memberdef kind="function" id="d8/d2c/classIntegrandSE_1a7b17c0e7edd1bd66a3fd53ae382c30c8" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">void</ref></type>
        <definition>void IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::evaluate_vertex</definition>
        <argsstring>(Q &amp;factorClosedAbove, Q &amp;factorAClosedBelow, const int iK, const double vp) const</argsstring>
        <name>evaluate_vertex</name>
        <qualifiedname>IntegrandSE::evaluate_vertex</qualifiedname>
        <param>
          <type>Q &amp;</type>
          <declname>factorClosedAbove</declname>
        </param>
        <param>
          <type>Q &amp;</type>
          <declname>factorAClosedBelow</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> int</type>
          <declname>iK</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> double</type>
          <declname>vp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loop/integrandSE.hpp" line="69" column="10" bodyfile="loop/integrandSE.hpp" bodystart="398" bodyend="406"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
      </memberdef>
      <memberdef kind="function" id="d8/d2c/classIntegrandSE_1a3b9733a029d3c506a14cfc9d5b5dde4d" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">void</ref></type>
        <definition>void IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::evaluate_vertex</definition>
        <argsstring>(Q &amp;factorClosedAbove, const int iK, const double vp) const</argsstring>
        <name>evaluate_vertex</name>
        <qualifiedname>IntegrandSE::evaluate_vertex</qualifiedname>
        <param>
          <type>Q &amp;</type>
          <declname>factorClosedAbove</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> int</type>
          <declname>iK</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> double</type>
          <declname>vp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loop/integrandSE.hpp" line="70" column="10" bodyfile="loop/integrandSE.hpp" bodystart="409" bodyend="414"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
      </memberdef>
      <memberdef kind="function" id="d8/d2c/classIntegrandSE_1a28c0776d3f058072de9698a965dc8557" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">auto</ref></type>
        <definition>auto IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::evaluate_vertex_vectorized</definition>
        <argsstring>(const double vp) const -&gt; buffertype_vertex</argsstring>
        <name>evaluate_vertex_vectorized</name>
        <qualifiedname>IntegrandSE::evaluate_vertex_vectorized</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> double</type>
          <declname>vp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loop/integrandSE.hpp" line="71" column="10" bodyfile="loop/integrandSE.hpp" bodystart="417" bodyend="448"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d8/d2c/classIntegrandSE_1ad2fbb082e879d192ef8e85cc002a4b01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::IntegrandSE</definition>
        <argsstring>(const int type_in, const vertType &amp;vertex_in, const Propagator&lt; Q &gt; &amp;prop_in, const int iK_in, const int i_spin_in, const double v_in, const int i_in_in)</argsstring>
        <name>IntegrandSE</name>
        <qualifiedname>IntegrandSE::IntegrandSE</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> int</type>
          <declname>type_in</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">vertType</ref> &amp;</type>
          <declname>vertex_in</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d2/d34/classPropagator" kindref="compound">Propagator</ref>&lt; Q &gt; &amp;</type>
          <declname>prop_in</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> int</type>
          <declname>iK_in</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> int</type>
          <declname>i_spin_in</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> double</type>
          <declname>v_in</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> int</type>
          <declname>i_in_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type_in</parametername>
</parameternamelist>
<parameterdescription>
<para>determines Keldysh components (always type = 0 for MF) is the element in Sigma matrix to be computed: <programlisting><codeline><highlight class="normal">0<sp/><sp/>1<sp/><sp/><sp/><sp/><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">___</ref><sp/><sp/><sp/><sp/><sp/>K<sp/><sp/><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">A</ref></highlight></codeline>
<codeline><highlight class="normal">2<sp/><sp/>3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">R</ref><sp/><sp/>0</highlight></codeline>
</programlisting> For example: <linebreak/>
 type = 0 -&gt; Keldysh component <linebreak/>
 type = 2 -&gt; Retarded component </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vertex_in</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the input vertex. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prop_in</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the input propagator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iK_in</parametername>
</parameternamelist>
<parameterdescription>
<para>Keldysh index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i_spin_in</parametername>
</parameternamelist>
<parameterdescription>
<para>spin index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_in</parametername>
</parameternamelist>
<parameterdescription>
<para>external fermionic frequency index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i_in_in</parametername>
</parameternamelist>
<parameterdescription>
<para>internal index (trivially 0 most of the time) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loop/integrandSE.hpp" line="92" column="5" bodyfile="loop/integrandSE.hpp" bodystart="92" bodyend="105"/>
        <references refid="d1/df8/master__parameters_8hpp_1afab5195e3ffff420d211040e5672fcbe" compoundref="d1/df8/master__parameters_8hpp" startline="137">KELDYSH</references>
        <references refid="d8/d2c/classIntegrandSE_1a32c7d650e0ce2b9879a4c5331fafccfe" compoundref="de/d65/integrandSE_8hpp" startline="121" endline="222">IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::set_Keldysh_components_to_be_calculated</references>
        <references refid="d8/d2c/classIntegrandSE_1a2f9648b894ad1a4de39aead0a834bc07" compoundref="de/d65/integrandSE_8hpp" startline="58">IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::transform_to_KeldyshBasis</references>
      </memberdef>
      <memberdef kind="function" id="d8/d2c/classIntegrandSE_1a56ffbc9eabac2af2c608652c3e3741fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">auto</ref></type>
        <definition>auto IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::operator()</definition>
        <argsstring>(double vp) const -&gt; return_type</argsstring>
        <name>operator()</name>
        <qualifiedname>IntegrandSE::operator()</qualifiedname>
        <param>
          <type>double</type>
          <declname>vp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Call operator: <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vp</parametername>
</parameternamelist>
<parameterdescription>
<para>frequency at which to evaluate integrand (to be integrated over) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>value of the integrand object evaluated at frequency vp </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loop/integrandSE.hpp" line="112" column="10" bodyfile="loop/integrandSE.hpp" bodystart="225" bodyend="228"/>
        <references refid="d1/df8/master__parameters_8hpp_1afab5195e3ffff420d211040e5672fcbe" compoundref="d1/df8/master__parameters_8hpp" startline="137">KELDYSH</references>
      </memberdef>
      <memberdef kind="function" id="d8/d2c/classIntegrandSE_1aafbce3768155a327575781a864fd31e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">void</ref></type>
        <definition>void IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::save_integrand</definition>
        <argsstring>() const</argsstring>
        <name>save_integrand</name>
        <qualifiedname>IntegrandSE::save_integrand</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Define standard frequency points on which to evaluate the integrand</para>
        </inbodydescription>
        <location file="loop/integrandSE.hpp" line="114" column="10" bodyfile="loop/integrandSE.hpp" bodystart="256" bodyend="274"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
      </memberdef>
      <memberdef kind="function" id="d8/d2c/classIntegrandSE_1aca23488440006e8d204109650aa0a170" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">void</ref></type>
        <definition>void IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::save_integrand</definition>
        <argsstring>(const rvec &amp;freqs, const std::string &amp;filename_prefix) const</argsstring>
        <name>save_integrand</name>
        <qualifiedname>IntegrandSE::save_integrand</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d59/data__structures_8hpp_1a0b786e1da4feaf70e9d0817f0ba0bbee" kindref="member">rvec</ref> &amp;</type>
          <declname>freqs</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> std::string &amp;</type>
          <declname>filename_prefix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loop/integrandSE.hpp" line="115" column="10" bodyfile="loop/integrandSE.hpp" bodystart="277" bodyend="298"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d1/df8/master__parameters_8hpp_1a1b384aea75d8da97c90c700d40dc19d2" compoundref="d1/df8/master__parameters_8hpp" startline="159">data_dir</references>
        <references refid="d1/df8/master__parameters_8hpp_1a722c2af0617ed167ad80956c733f131c" compoundref="d1/df8/master__parameters_8hpp" startline="19">KELDYSH_FORMALISM</references>
        <references refid="d4/dda/mpi__setup_8c_09_09_1a191972e98e51a56d90e8e5f750496c7d" compoundref="d4/dda/mpi__setup_8c_09_09" startline="3" endline="7">mpi_world_rank</references>
        <references refid="d6/d84/namespaceutils_1ad566cc1586ac4598d5823caa71620eb5" compoundref="d0/d3f/util_8hpp" startline="25" endline="38">utils::print</references>
        <references refid="d1/df8/master__parameters_8hpp_1a8686f007b17788aec22df2c68263005b" compoundref="d1/df8/master__parameters_8hpp" startline="23">VECTORIZED_INTEGRATION</references>
        <references refid="d3/d22/r__vertex_8hpp_1a2337339bdea1a060b1205e7bcba3bb20" compoundref="d5/de4/hdf5__routines_8hpp" startline="425" endline="440">write_to_hdf</references>
      </memberdef>
      <memberdef kind="function" id="d8/d2c/classIntegrandSE_1a3de6ed35b2ae2ba2ccc71c5961723674" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">void</ref></type>
        <definition>void IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;::get_integrand_vals</definition>
        <argsstring>(const rvec &amp;freqs, Eigen::Matrix&lt; Q, Eigen::Dynamic, Eigen::Dynamic &gt; &amp;integrand_vals, Eigen::Matrix&lt; Q, Eigen::Dynamic, Eigen::Dynamic &gt; &amp;vertex_vals) const</argsstring>
        <name>get_integrand_vals</name>
        <qualifiedname>IntegrandSE::get_integrand_vals</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d59/data__structures_8hpp_1a0b786e1da4feaf70e9d0817f0ba0bbee" kindref="member">rvec</ref> &amp;</type>
          <declname>freqs</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; Q, Eigen::Dynamic, Eigen::Dynamic &gt; &amp;</type>
          <declname>integrand_vals</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; Q, Eigen::Dynamic, Eigen::Dynamic &gt; &amp;</type>
          <declname>vertex_vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loop/integrandSE.hpp" line="116" column="10" bodyfile="loop/integrandSE.hpp" bodystart="231" bodyend="253"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Class for the integrand of the Retarded <ref refid="d5/df6/classSelfEnergy" kindref="compound">SelfEnergy</ref> Requires a fullvertex (ref), a <ref refid="d8/d2c/classIntegrandSE_1aca04a0c8f180e882e2bd87a2ef26eae9" kindref="member">propagator(ref)</ref>, an input frequency and an internal structure index <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Type in which the integrand takes values, usually comp Class for the integrand of a loop calculation. Invoked by <ref refid="df/dc8/classLoopCalculator" kindref="compound">LoopCalculator</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vertType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the vertex to be used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>all_spins</parametername>
</parameternamelist>
<parameterdescription>
<para>Compute all spin components? </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>return_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the data of the result. Typically = Q. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>version</parametername>
</parameternamelist>
<parameterdescription>
<para>Version of the self-energy loop. See documentation for LoopFunctionCalculator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="9">
        <label>Matrix&lt; Q, 4, 4 &gt;</label>
      </node>
      <node id="1">
        <label>IntegrandSE&lt; Q, vertType, all_spins, return_type, version &gt;</label>
        <link refid="d8/d2c/classIntegrandSE"/>
        <childnode refid="2" relation="usage">
          <edgelabel>-i0_vertex_left</edgelabel>
          <edgelabel>-i0_vertex_right</edgelabel>
          <edgelabel>-iK</edgelabel>
          <edgelabel>-i_in</edgelabel>
          <edgelabel>-i_spin</edgelabel>
          <edgelabel>-type</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>-components</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>-vertex</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>-propagator</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>-v</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>-transform_to_KeldyshBasis</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>T</label>
      </node>
      <node id="7">
        <label>const Propagator&lt; Q &gt; &amp;</label>
      </node>
      <node id="6">
        <label>const vertType &amp;</label>
      </node>
      <node id="8">
        <label>double</label>
      </node>
      <node id="2">
        <label>int</label>
      </node>
      <node id="4">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::vector&lt; int &gt;</label>
        <childnode refid="2" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; int &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="loop/integrandSE.hpp" line="37" column="1" bodyfile="loop/integrandSE.hpp" bodystart="37" bodyend="118"/>
    <listofallmembers>
      <member refid="d8/d2c/classIntegrandSE_1a6400ef36a46d90c0bf680324c3ad25c7" prot="private" virt="non-virtual"><scope>IntegrandSE</scope><name>buffertype_propagator</name></member>
      <member refid="d8/d2c/classIntegrandSE_1a5994c1580efa9b681cee75cb521cdd04" prot="private" virt="non-virtual"><scope>IntegrandSE</scope><name>buffertype_vertex</name></member>
      <member refid="d8/d2c/classIntegrandSE_1aec931bc804234d48123926a082ca412e" prot="private" virt="non-virtual"><scope>IntegrandSE</scope><name>components</name></member>
      <member refid="d8/d2c/classIntegrandSE_1a60ce205e5413c94ff37f40972f80ea7d" prot="private" virt="non-virtual"><scope>IntegrandSE</scope><name>evaluate_propagator</name></member>
      <member refid="d8/d2c/classIntegrandSE_1a7ed8d72a0aa4ad1c6c4e5e437c3265ae" prot="private" virt="non-virtual"><scope>IntegrandSE</scope><name>evaluate_propagator</name></member>
      <member refid="d8/d2c/classIntegrandSE_1a187351bd93e9dcef16ff6738769ecb9e" prot="private" virt="non-virtual"><scope>IntegrandSE</scope><name>evaluate_propagator_vectorized</name></member>
      <member refid="d8/d2c/classIntegrandSE_1a7b17c0e7edd1bd66a3fd53ae382c30c8" prot="private" virt="non-virtual"><scope>IntegrandSE</scope><name>evaluate_vertex</name></member>
      <member refid="d8/d2c/classIntegrandSE_1a3b9733a029d3c506a14cfc9d5b5dde4d" prot="private" virt="non-virtual"><scope>IntegrandSE</scope><name>evaluate_vertex</name></member>
      <member refid="d8/d2c/classIntegrandSE_1a28c0776d3f058072de9698a965dc8557" prot="private" virt="non-virtual"><scope>IntegrandSE</scope><name>evaluate_vertex_vectorized</name></member>
      <member refid="d8/d2c/classIntegrandSE_1a3de6ed35b2ae2ba2ccc71c5961723674" prot="public" virt="non-virtual"><scope>IntegrandSE</scope><name>get_integrand_vals</name></member>
      <member refid="d8/d2c/classIntegrandSE_1a1db4f700599a0bc468ad9c959893f280" prot="private" virt="non-virtual"><scope>IntegrandSE</scope><name>i0_vertex_left</name></member>
      <member refid="d8/d2c/classIntegrandSE_1add96d050e65a8b1c3d339aa3afe7ce26" prot="private" virt="non-virtual"><scope>IntegrandSE</scope><name>i0_vertex_right</name></member>
      <member refid="d8/d2c/classIntegrandSE_1a8645f5bd961783a3d8e5c6d7ccd3f50c" prot="private" virt="non-virtual"><scope>IntegrandSE</scope><name>i_in</name></member>
      <member refid="d8/d2c/classIntegrandSE_1af5db8b590062b93536ede7ab2c70e95b" prot="private" virt="non-virtual"><scope>IntegrandSE</scope><name>i_spin</name></member>
      <member refid="d8/d2c/classIntegrandSE_1a77f1ffc08d9a81d16082c462cca5eaac" prot="private" virt="non-virtual"><scope>IntegrandSE</scope><name>iK</name></member>
      <member refid="d8/d2c/classIntegrandSE_1ad2fbb082e879d192ef8e85cc002a4b01" prot="public" virt="non-virtual"><scope>IntegrandSE</scope><name>IntegrandSE</name></member>
      <member refid="d8/d2c/classIntegrandSE_1a444b7d1c9b8aab5db6b2fa69a5a62f43" prot="private" virt="non-virtual"><scope>IntegrandSE</scope><name>Keldysh_value</name></member>
      <member refid="d8/d2c/classIntegrandSE_1afcd4503b9ab023d78c78c37293847030" prot="private" virt="non-virtual"><scope>IntegrandSE</scope><name>Matsubara_value</name></member>
      <member refid="d8/d2c/classIntegrandSE_1a56ffbc9eabac2af2c608652c3e3741fa" prot="public" virt="non-virtual"><scope>IntegrandSE</scope><name>operator()</name></member>
      <member refid="d8/d2c/classIntegrandSE_1aca04a0c8f180e882e2bd87a2ef26eae9" prot="private" virt="non-virtual"><scope>IntegrandSE</scope><name>propagator</name></member>
      <member refid="d8/d2c/classIntegrandSE_1aafbce3768155a327575781a864fd31e8" prot="public" virt="non-virtual"><scope>IntegrandSE</scope><name>save_integrand</name></member>
      <member refid="d8/d2c/classIntegrandSE_1aca23488440006e8d204109650aa0a170" prot="public" virt="non-virtual"><scope>IntegrandSE</scope><name>save_integrand</name></member>
      <member refid="d8/d2c/classIntegrandSE_1a32c7d650e0ce2b9879a4c5331fafccfe" prot="private" virt="non-virtual"><scope>IntegrandSE</scope><name>set_Keldysh_components_to_be_calculated</name></member>
      <member refid="d8/d2c/classIntegrandSE_1a2f9648b894ad1a4de39aead0a834bc07" prot="private" virt="non-virtual"><scope>IntegrandSE</scope><name>transform_to_KeldyshBasis</name></member>
      <member refid="d8/d2c/classIntegrandSE_1a4b066673957b16c34d2b888cfd24aeb4" prot="private" virt="non-virtual"><scope>IntegrandSE</scope><name>type</name></member>
      <member refid="d8/d2c/classIntegrandSE_1a034abdbf754a84d38e8bd88472bc9545" prot="private" virt="non-virtual"><scope>IntegrandSE</scope><name>v</name></member>
      <member refid="d8/d2c/classIntegrandSE_1aa1035e85c1b6e3e9bac48db1d74e865b" prot="private" virt="non-virtual"><scope>IntegrandSE</scope><name>vertex</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
