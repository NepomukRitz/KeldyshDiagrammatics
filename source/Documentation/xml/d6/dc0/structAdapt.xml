<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="d6/dc0/structAdapt" kind="struct" language="C++" prot="public">
    <compoundname>Adapt</compoundname>
    <includes refid="da/db4/integrator__NR_8hpp" local="no">integrator_NR.hpp</includes>
    <templateparamlist>
      <param>
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">typename</ref> <ref refid="d1/d9f/classIntegrand" kindref="compound">Integrand</ref></type>
      </param>
      <param>
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">typename</ref> Q</type>
        <defval>std::result_of_t&lt;<ref refid="d1/d9f/classIntegrand" kindref="compound">Integrand</ref>(double)&gt;</defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="d6/dc0/structAdapt_1aaae88e9a73d62539f60cfde7fe5d1489" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Adapt&lt; Integrand, Q &gt;::TOL</definition>
        <argsstring></argsstring>
        <name>TOL</name>
        <qualifiedname>Adapt::TOL</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="integrator/integrator_NR.hpp" line="15" column="12" bodyfile="integrator/integrator_NR.hpp" bodystart="15" bodyend="-1"/>
        <referencedby refid="d6/dc0/structAdapt_1a2286900224724e62a556838cb13dd43c" compoundref="da/db4/integrator__NR_8hpp" startline="20" endline="23">Adapt&lt; Integrand, Q &gt;::Adapt</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d6/dc0/structAdapt_1abffcca54549d11b58f517eb7cdacff95" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Adapt&lt; Integrand, Q &gt;::tolerance_rel</definition>
        <argsstring></argsstring>
        <name>tolerance_rel</name>
        <qualifiedname>Adapt::tolerance_rel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="integrator/integrator_NR.hpp" line="15" column="16" bodyfile="integrator/integrator_NR.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/dc0/structAdapt_1ae9eacb5ff5ed99db93119a4fbc0d6788" prot="public" static="no" mutable="no">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> double</type>
        <definition>const double Adapt&lt; Integrand, Q &gt;::tolerance_abs</definition>
        <argsstring></argsstring>
        <name>tolerance_abs</name>
        <qualifiedname>Adapt::tolerance_abs</qualifiedname>
        <initializer>= std::numeric_limits&lt;double&gt;::epsilon()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="integrator/integrator_NR.hpp" line="16" column="18" bodyfile="integrator/integrator_NR.hpp" bodystart="16" bodyend="-1"/>
        <referencedby refid="d6/dc0/structAdapt_1a2286900224724e62a556838cb13dd43c" compoundref="da/db4/integrator__NR_8hpp" startline="20" endline="23">Adapt&lt; Integrand, Q &gt;::Adapt</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d6/dc0/structAdapt_1a433477773509a64076fe1b56299a7a8c" prot="public" static="no" mutable="no">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d1/d9f/classIntegrand" kindref="compound">Integrand</ref> &amp;</type>
        <definition>const Integrand&amp; Adapt&lt; Integrand, Q &gt;::integrand</definition>
        <argsstring></argsstring>
        <name>integrand</name>
        <qualifiedname>Adapt::integrand</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="integrator/integrator_NR.hpp" line="18" column="21" bodyfile="integrator/integrator_NR.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="d6/dc0/structAdapt_1ae137add926c1bfd9f4c3e66e8c81026b" prot="public" static="yes" mutable="no">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> double</type>
        <definition>const double Adapt&lt; Integrand, Q &gt;::alpha</definition>
        <argsstring></argsstring>
        <name>alpha</name>
        <qualifiedname>Adapt::alpha</qualifiedname>
        <initializer>= <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">sqrt</ref>(2./3.)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="integrator/integrator_NR.hpp" line="17" column="25" bodyfile="integrator/integrator_NR.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/dc0/structAdapt_1a52418182f863379737cba860e80de058" prot="public" static="yes" mutable="no">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> double</type>
        <definition>const double Adapt&lt; Integrand, Q &gt;::beta</definition>
        <argsstring></argsstring>
        <name>beta</name>
        <qualifiedname>Adapt::beta</qualifiedname>
        <initializer>= 1./<ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">sqrt</ref>(5.)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="integrator/integrator_NR.hpp" line="17" column="31" bodyfile="integrator/integrator_NR.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/dc0/structAdapt_1aa34bb13d5a18d8d4b18d11601c93cef1" prot="public" static="yes" mutable="no">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> double</type>
        <definition>const double Adapt&lt; Integrand, Q &gt;::x1</definition>
        <argsstring></argsstring>
        <name>x1</name>
        <qualifiedname>Adapt::x1</qualifiedname>
        <initializer>= 0.942882415695480</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="integrator/integrator_NR.hpp" line="17" column="36" bodyfile="integrator/integrator_NR.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/dc0/structAdapt_1a1b8835d5b364a23040d18df60762f4fe" prot="public" static="yes" mutable="no">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> double</type>
        <definition>const double Adapt&lt; Integrand, Q &gt;::x2</definition>
        <argsstring></argsstring>
        <name>x2</name>
        <qualifiedname>Adapt::x2</qualifiedname>
        <initializer>= 0.641853342345781</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="integrator/integrator_NR.hpp" line="17" column="39" bodyfile="integrator/integrator_NR.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/dc0/structAdapt_1a50638fddf864fdd7882900beef0603e6" prot="public" static="yes" mutable="no">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> double</type>
        <definition>const double Adapt&lt; Integrand, Q &gt;::x3</definition>
        <argsstring></argsstring>
        <name>x3</name>
        <qualifiedname>Adapt::x3</qualifiedname>
        <initializer>= 0.236383199662150</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="integrator/integrator_NR.hpp" line="17" column="42" bodyfile="integrator/integrator_NR.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/dc0/structAdapt_1a1419b95e8f5310cb70f2a1914f9a2ef5" prot="public" static="yes" mutable="no">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> double</type>
        <definition>const double Adapt&lt; Integrand, Q &gt;::nodes</definition>
        <argsstring>[12]</argsstring>
        <name>nodes</name>
        <qualifiedname>Adapt::nodes</qualifiedname>
        <initializer>= {0, -<ref refid="d6/dc0/structAdapt_1aa34bb13d5a18d8d4b18d11601c93cef1" kindref="member">x1</ref>, -<ref refid="d6/dc0/structAdapt_1ae137add926c1bfd9f4c3e66e8c81026b" kindref="member">alpha</ref>, -<ref refid="d6/dc0/structAdapt_1a1b8835d5b364a23040d18df60762f4fe" kindref="member">x2</ref>, -<ref refid="d6/dc0/structAdapt_1a52418182f863379737cba860e80de058" kindref="member">beta</ref>, -<ref refid="d6/dc0/structAdapt_1a50638fddf864fdd7882900beef0603e6" kindref="member">x3</ref>, 0.0, <ref refid="d6/dc0/structAdapt_1a50638fddf864fdd7882900beef0603e6" kindref="member">x3</ref>, <ref refid="d6/dc0/structAdapt_1a52418182f863379737cba860e80de058" kindref="member">beta</ref>, <ref refid="d6/dc0/structAdapt_1a1b8835d5b364a23040d18df60762f4fe" kindref="member">x2</ref>, <ref refid="d6/dc0/structAdapt_1ae137add926c1bfd9f4c3e66e8c81026b" kindref="member">alpha</ref>, <ref refid="d6/dc0/structAdapt_1aa34bb13d5a18d8d4b18d11601c93cef1" kindref="member">x1</ref>}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="integrator/integrator_NR.hpp" line="17" column="45" bodyfile="integrator/integrator_NR.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d6/dc0/structAdapt_1a2286900224724e62a556838cb13dd43c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Adapt&lt; Integrand, Q &gt;::Adapt</definition>
        <argsstring>(double tol_in, const Integrand &amp;integrand_in)</argsstring>
        <name>Adapt</name>
        <qualifiedname>Adapt::Adapt</qualifiedname>
        <param>
          <type>double</type>
          <declname>tol_in</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d1/d9f/classIntegrand" kindref="compound">Integrand</ref> &amp;</type>
          <declname>integrand_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="integrator/integrator_NR.hpp" line="20" column="5" bodyfile="integrator/integrator_NR.hpp" bodystart="20" bodyend="23"/>
        <references refid="d6/dc0/structAdapt_1aaae88e9a73d62539f60cfde7fe5d1489" compoundref="da/db4/integrator__NR_8hpp" startline="15">Adapt&lt; Integrand, Q &gt;::TOL</references>
        <references refid="d6/dc0/structAdapt_1ae9eacb5ff5ed99db93119a4fbc0d6788" compoundref="da/db4/integrator__NR_8hpp" startline="16">Adapt&lt; Integrand, Q &gt;::tolerance_abs</references>
      </memberdef>
      <memberdef kind="function" id="d6/dc0/structAdapt_1aea59190231c23744a7108f395568049d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">auto</ref></type>
        <definition>auto Adapt&lt; Integrand, Q &gt;::integrate</definition>
        <argsstring>(double a, double b) -&gt; Q</argsstring>
        <name>integrate</name>
        <qualifiedname>Adapt::integrate</qualifiedname>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Integrate integrand from a to b. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="integrator/integrator_NR.hpp" line="26" column="10" bodyfile="integrator/integrator_NR.hpp" bodystart="59" bodyend="112"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="da/db4/integrator__NR_8hpp_1aa4a436b70bc67091e573ada881adb530" compoundref="da/db4/integrator__NR_8hpp" startline="47" endline="56">Gauss_Kronrod_13</references>
        <references refid="da/db4/integrator__NR_8hpp_1ad02bc64215b136aaa6eeaa4c88609e94" compoundref="da/db4/integrator__NR_8hpp" startline="39" endline="44">Gauss_Kronrod_7</references>
        <references refid="da/db4/integrator__NR_8hpp_1af388140af5884ce538e096333a569127" compoundref="da/db4/integrator__NR_8hpp" startline="34" endline="36">Gauss_Lobatto_4</references>
        <references refid="d7/d59/data__structures_8hpp_1a5e0abbc4e2e7297ab0197cdac1b9e77d" compoundref="d7/d59/data__structures_8hpp" startline="29" endline="39">myabs</references>
        <referencedby refid="dd/d9b/classAdapt__semiInfinitUpper_1a1f572c519c8517d3d05bbda0332a17d1" compoundref="da/db4/integrator__NR_8hpp" startline="206" endline="208">Adapt_semiInfinitUpper&lt; Integrand &gt;::integrate</referencedby>
        <referencedby refid="d3/def/classAdapt__semiInfinitLower_1aa9fc2b24cb5d635f00e7eb936e8c5cb8" compoundref="da/db4/integrator__NR_8hpp" startline="224" endline="226">Adapt_semiInfinitLower&lt; Integrand &gt;::integrate</referencedby>
        <referencedby refid="dd/d1f/integrator_8hpp_1a48c076c51ab55e8e2172d7d4fe99b12a" compoundref="dd/d1f/integrator_8hpp" startline="318" endline="321">integrator</referencedby>
        <referencedby refid="dd/d1f/integrator_8hpp_1a3dc530034bfaf5a3f1921ccb88e0a18a" compoundref="dd/d1f/integrator_8hpp" startline="324" endline="327">integrator</referencedby>
        <referencedby refid="dd/d1f/integrator_8hpp_1aed3c6a84bb84d819ecd0a634e88009b5" compoundref="dd/d1f/integrator_8hpp" startline="337" endline="340">integrator</referencedby>
        <referencedby refid="dd/d1f/integrator_8hpp_1a4e44036d1dc1fa3cd6f999f3e0e21ecf" compoundref="dd/d1f/integrator_8hpp" startline="383" endline="400">integrator</referencedby>
      </memberdef>
      <memberdef kind="function" id="d6/dc0/structAdapt_1ae8357cf7676239abcf6fcb591351e158" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">auto</ref></type>
        <definition>auto Adapt&lt; Integrand, Q &gt;::integrate</definition>
        <argsstring>(double a, double b, Q fa, Q fb, Q is) -&gt; Q</argsstring>
        <name>integrate</name>
        <qualifiedname>Adapt::integrate</qualifiedname>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <param>
          <type>Q</type>
          <declname>fa</declname>
        </param>
        <param>
          <type>Q</type>
          <declname>fb</declname>
        </param>
        <param>
          <type>Q</type>
          <declname>is</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper function for recursion: Integrate integrand in subinterval [a, b], reusing the boundary values fa, fb and given error estimate is. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="integrator/integrator_NR.hpp" line="29" column="10" bodyfile="integrator/integrator_NR.hpp" bodystart="115" bodyend="150"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="da/db4/integrator__NR_8hpp_1ad02bc64215b136aaa6eeaa4c88609e94" compoundref="da/db4/integrator__NR_8hpp" startline="39" endline="44">Gauss_Kronrod_7</references>
        <references refid="da/db4/integrator__NR_8hpp_1af388140af5884ce538e096333a569127" compoundref="da/db4/integrator__NR_8hpp" startline="34" endline="36">Gauss_Lobatto_4</references>
        <references refid="d7/d59/data__structures_8hpp_1a5e0abbc4e2e7297ab0197cdac1b9e77d" compoundref="d7/d59/data__structures_8hpp" startline="29" endline="39">myabs</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Adaptive integration using 4-point Gauss-Lobatto rule with 7-point Gauss-Kronrod extension, and 13-point Gauss-Kronrod as error estimate. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Adapt&lt; Integrand, Q &gt;</label>
        <link refid="d6/dc0/structAdapt"/>
      </node>
      <node id="2">
        <label>Adapt&lt; adaptive_integrator_detail::integrand_reparametrized_Lower&lt; Integrand &gt;, std::result_of_t&lt; Integrand(double)&gt; &gt;</label>
        <link refid="d6/dc0/structAdapt"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; adaptive_integrator_detail::integrand_reparametrized_Lower&lt; Integrand &gt;, std::result_of_t&lt; Integrand(double)&gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Adapt&lt; adaptive_integrator_detail::integrand_reparametrized_Upper&lt; Integrand &gt; &gt;</label>
        <link refid="d6/dc0/structAdapt"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; adaptive_integrator_detail::integrand_reparametrized_Upper&lt; Integrand &gt; &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Adapt&lt; Integrand, Q &gt;</label>
        <link refid="d6/dc0/structAdapt"/>
        <childnode refid="2" relation="usage">
          <edgelabel>+TOL</edgelabel>
          <edgelabel>+alpha</edgelabel>
          <edgelabel>+beta</edgelabel>
          <edgelabel>+nodes</edgelabel>
          <edgelabel>+tolerance_abs</edgelabel>
          <edgelabel>+tolerance_rel</edgelabel>
          <edgelabel>+x1</edgelabel>
          <edgelabel>+x2</edgelabel>
          <edgelabel>+x3</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>+integrand</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Integrand&lt; diag_class, channel, spin, Q, vertexType_left, vertexType_right, Bubble_Object, return_type &gt;</label>
        <link refid="d1/d9f/classIntegrand"/>
        <childnode refid="4" relation="usage">
          <edgelabel>-vertex1</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>-vertex2</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>-Pi</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>-i0</edgelabel>
          <edgelabel>-i0_left</edgelabel>
          <edgelabel>-i0_right</edgelabel>
          <edgelabel>-i0_symmred</edgelabel>
          <edgelabel>-i2</edgelabel>
          <edgelabel>-i_in</edgelabel>
          <edgelabel>-i_spin</edgelabel>
          <edgelabel>-iw</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>-v</edgelabel>
          <edgelabel>-vp</edgelabel>
          <edgelabel>-w</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>-diff</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>+input_external</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>-res_l_V_initial</edgelabel>
          <edgelabel>-res_l_Vhat_initial</edgelabel>
          <edgelabel>-res_r_V_initial</edgelabel>
          <edgelabel>-res_r_Vhat_initial</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>+projection_lambda</edgelabel>
          <edgelabel>+projection_lambdaBar</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>K_class</label>
      </node>
      <node id="13">
        <label>Q</label>
      </node>
      <node id="9">
        <label>VertexInput</label>
        <link refid="d2/db2/structVertexInput"/>
        <childnode refid="7" relation="usage">
          <edgelabel>+iK</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>+v1</edgelabel>
          <edgelabel>+v2</edgelabel>
          <edgelabel>+w</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>+i_in</edgelabel>
          <edgelabel>+iw_r</edgelabel>
          <edgelabel>+spin</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>+channel_bubble</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>+kClass_aim</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>bool</label>
        <link refid="d9/db9/classbool"/>
      </node>
      <node id="11">
        <label>char</label>
      </node>
      <node id="6">
        <label>const Bubble_Object &amp;</label>
      </node>
      <node id="14">
        <label>Matrix&lt; Q, 4, 4 &gt;</label>
      </node>
      <node id="4">
        <label>const vertexType_left &amp;</label>
      </node>
      <node id="5">
        <label>const vertexType_right &amp;</label>
      </node>
      <node id="2">
        <label>double</label>
      </node>
      <node id="7">
        <label>int</label>
      </node>
      <node id="10">
        <label>size_t</label>
      </node>
    </collaborationgraph>
    <location file="integrator/integrator_NR.hpp" line="13" column="1" bodyfile="integrator/integrator_NR.hpp" bodystart="13" bodyend="30"/>
    <listofallmembers>
      <member refid="d6/dc0/structAdapt_1a2286900224724e62a556838cb13dd43c" prot="public" virt="non-virtual"><scope>Adapt</scope><name>Adapt</name></member>
      <member refid="d6/dc0/structAdapt_1ae137add926c1bfd9f4c3e66e8c81026b" prot="public" virt="non-virtual"><scope>Adapt</scope><name>alpha</name></member>
      <member refid="d6/dc0/structAdapt_1a52418182f863379737cba860e80de058" prot="public" virt="non-virtual"><scope>Adapt</scope><name>beta</name></member>
      <member refid="d6/dc0/structAdapt_1a433477773509a64076fe1b56299a7a8c" prot="public" virt="non-virtual"><scope>Adapt</scope><name>integrand</name></member>
      <member refid="d6/dc0/structAdapt_1aea59190231c23744a7108f395568049d" prot="public" virt="non-virtual"><scope>Adapt</scope><name>integrate</name></member>
      <member refid="d6/dc0/structAdapt_1ae8357cf7676239abcf6fcb591351e158" prot="public" virt="non-virtual"><scope>Adapt</scope><name>integrate</name></member>
      <member refid="d6/dc0/structAdapt_1a1419b95e8f5310cb70f2a1914f9a2ef5" prot="public" virt="non-virtual"><scope>Adapt</scope><name>nodes</name></member>
      <member refid="d6/dc0/structAdapt_1aaae88e9a73d62539f60cfde7fe5d1489" prot="public" virt="non-virtual"><scope>Adapt</scope><name>TOL</name></member>
      <member refid="d6/dc0/structAdapt_1ae9eacb5ff5ed99db93119a4fbc0d6788" prot="public" virt="non-virtual"><scope>Adapt</scope><name>tolerance_abs</name></member>
      <member refid="d6/dc0/structAdapt_1abffcca54549d11b58f517eb7cdacff95" prot="public" virt="non-virtual"><scope>Adapt</scope><name>tolerance_rel</name></member>
      <member refid="d6/dc0/structAdapt_1aa34bb13d5a18d8d4b18d11601c93cef1" prot="public" virt="non-virtual"><scope>Adapt</scope><name>x1</name></member>
      <member refid="d6/dc0/structAdapt_1a1b8835d5b364a23040d18df60762f4fe" prot="public" virt="non-virtual"><scope>Adapt</scope><name>x2</name></member>
      <member refid="d6/dc0/structAdapt_1a50638fddf864fdd7882900beef0603e6" prot="public" virt="non-virtual"><scope>Adapt</scope><name>x3</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
