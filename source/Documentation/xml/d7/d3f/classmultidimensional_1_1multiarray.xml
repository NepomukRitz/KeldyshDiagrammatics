<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="d7/d3f/classmultidimensional_1_1multiarray" kind="class" language="C++" prot="public">
    <compoundname>multidimensional::multiarray</compoundname>
    <includes refid="df/da4/multiarray_8hpp" local="no">multiarray.hpp</includes>
    <templateparamlist>
      <param>
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">typename</ref> T</type>
      </param>
      <param>
        <type>size_t</type>
        <declname>depth</declname>
        <defname>depth</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d7/d3f/classmultidimensional_1_1multiarray_1a15f6d396714c3619069900b3d846550c" prot="public" static="no">
        <type>T</type>
        <definition>using multidimensional::multiarray&lt; T, depth &gt;::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>multidimensional::multiarray::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="44" column="9" bodyfile="multidimensional/multiarray.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d7/d3f/classmultidimensional_1_1multiarray_1ab0aa529ad59f5ea36eae86c4f9dcde29" prot="public" static="no">
        <type>std::size_t</type>
        <definition>using multidimensional::multiarray&lt; T, depth &gt;::size_type =  std::size_t</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <qualifiedname>multidimensional::multiarray::size_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="45" column="9" bodyfile="multidimensional/multiarray.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d7/d3f/classmultidimensional_1_1multiarray_1ab6753f8d5c1c671ec86437b096f4fe3e" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using multidimensional::multiarray&lt; T, depth &gt;::difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <qualifiedname>multidimensional::multiarray::difference_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="46" column="9" bodyfile="multidimensional/multiarray.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d7/d3f/classmultidimensional_1_1multiarray_1ab3ce8855f4cb0c137638f61ec69e513f" prot="public" static="no">
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray_1a15f6d396714c3619069900b3d846550c" kindref="member">value_type</ref> &amp;</type>
        <definition>using multidimensional::multiarray&lt; T, depth &gt;::reference =  value_type &amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <qualifiedname>multidimensional::multiarray::reference</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="47" column="9" bodyfile="multidimensional/multiarray.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d7/d3f/classmultidimensional_1_1multiarray_1ae1b4ff18a119c8317f678575a6f66971" prot="public" static="no">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1a15f6d396714c3619069900b3d846550c" kindref="member">value_type</ref> &amp;</type>
        <definition>using multidimensional::multiarray&lt; T, depth &gt;::const_reference =  const value_type &amp;</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <qualifiedname>multidimensional::multiarray::const_reference</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="48" column="9" bodyfile="multidimensional/multiarray.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d7/d3f/classmultidimensional_1_1multiarray_1abf0b43ac725fa45bac73e0d2a9bd09f5" prot="public" static="no">
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray_1a15f6d396714c3619069900b3d846550c" kindref="member">value_type</ref> *</type>
        <definition>using multidimensional::multiarray&lt; T, depth &gt;::pointer =  value_type *</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <qualifiedname>multidimensional::multiarray::pointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="49" column="9" bodyfile="multidimensional/multiarray.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d7/d3f/classmultidimensional_1_1multiarray_1a9a3b366566ca10d508e9958fd5e1439c" prot="public" static="no">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1a15f6d396714c3619069900b3d846550c" kindref="member">value_type</ref> *</type>
        <definition>using multidimensional::multiarray&lt; T, depth &gt;::const_pointer =  const value_type *</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <qualifiedname>multidimensional::multiarray::const_pointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="50" column="9" bodyfile="multidimensional/multiarray.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d7/d3f/classmultidimensional_1_1multiarray_1acecc1afaa1d742fdd9eb9039182a82e2" prot="public" static="no">
        <type>std::array&lt; <ref refid="d7/d59/data__structures_8hpp_1a0bcc6ac8e774a3c55d2df75dc46c8b37" kindref="member">my_index_t</ref>, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt;</type>
        <definition>using multidimensional::multiarray&lt; T, depth &gt;::index_type =  std::array&lt;my_index_t, depth&gt;</definition>
        <argsstring></argsstring>
        <name>index_type</name>
        <qualifiedname>multidimensional::multiarray::index_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="51" column="9" bodyfile="multidimensional/multiarray.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d7/d3f/classmultidimensional_1_1multiarray_1adf01f1572984e9636a81839be5f3b6c6" prot="public" static="no">
        <type>std::array&lt; <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1ab0aa529ad59f5ea36eae86c4f9dcde29" kindref="member">size_type</ref>, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt;</type>
        <definition>using multidimensional::multiarray&lt; T, depth &gt;::dimensions_type =  std::array&lt;size_type, depth&gt;</definition>
        <argsstring></argsstring>
        <name>dimensions_type</name>
        <qualifiedname>multidimensional::multiarray::dimensions_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="52" column="9" bodyfile="multidimensional/multiarray.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d7/d3f/classmultidimensional_1_1multiarray_1accf8399bc31caf7060fbc8469d1b5a5c" prot="public" static="no">
        <type>Eigen::Array&lt; T, Eigen::Dynamic, 1 &gt;</type>
        <definition>using multidimensional::multiarray&lt; T, depth &gt;::buffer_type =  Eigen::Array&lt;T, Eigen::Dynamic, 1&gt;</definition>
        <argsstring></argsstring>
        <name>buffer_type</name>
        <qualifiedname>multidimensional::multiarray::buffer_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="74" column="9" bodyfile="multidimensional/multiarray.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d7/d3f/classmultidimensional_1_1multiarray_1a00f4733e52bf048b2d53b9140458515d" prot="public" static="no">
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray_1abf0b43ac725fa45bac73e0d2a9bd09f5" kindref="member">pointer</ref></type>
        <definition>using multidimensional::multiarray&lt; T, depth &gt;::iterator =  pointer</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <qualifiedname>multidimensional::multiarray::iterator</qualifiedname>
        <briefdescription>
<para>=== iterators === </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="141" column="9" bodyfile="multidimensional/multiarray.hpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d7/d3f/classmultidimensional_1_1multiarray_1aff7ef46a3572a152eb5921e02cf72b3a" prot="public" static="no">
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray_1a9a3b366566ca10d508e9958fd5e1439c" kindref="member">const_pointer</ref></type>
        <definition>using multidimensional::multiarray&lt; T, depth &gt;::const_iterator =  const_pointer</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <qualifiedname>multidimensional::multiarray::const_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="142" column="9" bodyfile="multidimensional/multiarray.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d7/d3f/classmultidimensional_1_1multiarray_1affae78ea84a5f1c5fac842f4129c8149" prot="private" static="no" mutable="no">
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray_1adf01f1572984e9636a81839be5f3b6c6" kindref="member">dimensions_type</ref></type>
        <definition>dimensions_type multidimensional::multiarray&lt; T, depth &gt;::m_length</definition>
        <argsstring></argsstring>
        <name>m_length</name>
        <qualifiedname>multidimensional::multiarray::m_length</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="56" column="25" bodyfile="multidimensional/multiarray.hpp" bodystart="56" bodyend="-1"/>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a7798825b221fe13945fb7f06a523c757" compoundref="df/da4/multiarray_8hpp" startline="582" endline="590">multidimensional::multiarray&lt; T, depth &gt;::_flat_size</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a0141c6e09ccc03e02202610597a96a83" compoundref="df/da4/multiarray_8hpp" startline="240" endline="248">multidimensional::multiarray&lt; T, depth &gt;::at_vectorized</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a5757d174bade77621dff6d192e8177de" compoundref="df/da4/multiarray_8hpp" startline="231" endline="238">multidimensional::multiarray&lt; T, depth &gt;::at_vectorized</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a406069311c6004e5e303408959e3b7bc" compoundref="df/da4/multiarray_8hpp" startline="225" endline="227">multidimensional::multiarray&lt; T, depth &gt;::is_same_length</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1aca0527dd01461a6b0e5979af8d399fc5" compoundref="df/da4/multiarray_8hpp" startline="563" endline="566">multidimensional::multiarray&lt; T, depth &gt;::length</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a25ad0588248c1de785fd07d1e8327771" compoundref="df/da4/multiarray_8hpp" startline="256" endline="264">multidimensional::multiarray&lt; T, depth &gt;::set_vectorized</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/d3f/classmultidimensional_1_1multiarray_1afd141265dea8d95a0203887fa16b6989" prot="private" static="no" mutable="no">
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray_1adf01f1572984e9636a81839be5f3b6c6" kindref="member">dimensions_type</ref></type>
        <definition>dimensions_type multidimensional::multiarray&lt; T, depth &gt;::m_length_cumulative</definition>
        <argsstring></argsstring>
        <name>m_length_cumulative</name>
        <qualifiedname>multidimensional::multiarray::m_length_cumulative</qualifiedname>
        <initializer>= <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1ad62ddf265ac9bcf7a13e24c98f36079b" kindref="member">get_cumul_length</ref>(<ref refid="d7/d3f/classmultidimensional_1_1multiarray_1affae78ea84a5f1c5fac842f4129c8149" kindref="member">m_length</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="65" column="25" bodyfile="multidimensional/multiarray.hpp" bodystart="65" bodyend="-1"/>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1adc2341497fc392f72af8c3d3190a7b13" compoundref="df/da4/multiarray_8hpp" startline="267" endline="273">multidimensional::multiarray&lt; T, depth &gt;::get_flatindex_ini</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a304baf744947fa9042da5e4bb9cf70b9" compoundref="df/da4/multiarray_8hpp" startline="276" endline="311">multidimensional::multiarray&lt; T, depth &gt;::get_values</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1aedeebccacda0e69cd93b169b2d28a0ff" compoundref="df/da4/multiarray_8hpp" startline="568" endline="571">multidimensional::multiarray&lt; T, depth &gt;::length_cumul</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" prot="public" static="no" mutable="no">
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray_1accf8399bc31caf7060fbc8469d1b5a5c" kindref="member">buffer_type</ref></type>
        <definition>buffer_type multidimensional::multiarray&lt; T, depth &gt;::elements</definition>
        <argsstring></argsstring>
        <name>elements</name>
        <qualifiedname>multidimensional::multiarray::elements</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="75" column="21" bodyfile="multidimensional/multiarray.hpp" bodystart="75" bodyend="-1"/>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a0141c6e09ccc03e02202610597a96a83" compoundref="df/da4/multiarray_8hpp" startline="240" endline="248">multidimensional::multiarray&lt; T, depth &gt;::at_vectorized</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a1a0f7133f9225325c79118a154b6e4f6" compoundref="df/da4/multiarray_8hpp" startline="250" endline="254">multidimensional::multiarray&lt; T, depth &gt;::at_vectorized</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a5757d174bade77621dff6d192e8177de" compoundref="df/da4/multiarray_8hpp" startline="231" endline="238">multidimensional::multiarray&lt; T, depth &gt;::at_vectorized</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1ae8a6f4b3920580ae116d35f3490e709f" compoundref="df/da4/multiarray_8hpp" startline="153" endline="156">multidimensional::multiarray&lt; T, depth &gt;::begin</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a72736a3525d18e148ca409ec30ce62eb" compoundref="df/da4/multiarray_8hpp" startline="144" endline="147">multidimensional::multiarray&lt; T, depth &gt;::begin</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a75f12a79c54cb1454f06261fb9baa185" compoundref="df/da4/multiarray_8hpp" startline="162" endline="165">multidimensional::multiarray&lt; T, depth &gt;::cbegin</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a11f84bb11d238d70d99922cf003cf420" compoundref="df/da4/multiarray_8hpp" startline="166" endline="169">multidimensional::multiarray&lt; T, depth &gt;::cend</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a7696176134ece4eefab479ba75b1b0f8" compoundref="df/da4/multiarray_8hpp" startline="592" endline="602">multidimensional::multiarray&lt; T, depth &gt;::check_size</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a52ab95f511cdd77c599ff3431dc60790" compoundref="df/da4/multiarray_8hpp" startline="352" endline="355">multidimensional::multiarray&lt; T, depth &gt;::data</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1ab0eb44d006398d29be417ed6b34ecb10" compoundref="df/da4/multiarray_8hpp" startline="347" endline="350">multidimensional::multiarray&lt; T, depth &gt;::data</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a72843a896df64733c74232efdd5f2af6" compoundref="df/da4/multiarray_8hpp" startline="196" endline="208">multidimensional::multiarray&lt; T, depth &gt;::eigen_segment</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1adae0c97b216bcb79f4a3e4ddf6c55796" compoundref="df/da4/multiarray_8hpp" startline="210" endline="222">multidimensional::multiarray&lt; T, depth &gt;::eigen_segment</referencedby>
        <referencedby refid="d7/da5/namespacemultidimensional_1a404a4fb087ba4244cb1bede97b8589f9" compoundref="df/da4/multiarray_8hpp" startline="736" endline="748">multidimensional::elementwise</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1ad33f2cb2edb8133098b9e06731669f96" compoundref="df/da4/multiarray_8hpp" startline="385" endline="398">multidimensional::multiarray&lt; T, depth &gt;::elementwise_map_assign</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1ad088042c4205750f6fb0760b5973d982" compoundref="df/da4/multiarray_8hpp" startline="157" endline="160">multidimensional::multiarray&lt; T, depth &gt;::end</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1aad7e086f7c50fbd63b80dc62711581ba" compoundref="df/da4/multiarray_8hpp" startline="148" endline="151">multidimensional::multiarray&lt; T, depth &gt;::end</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1ae95e38ba06e10e921ed2fe0101bf699f" compoundref="df/da4/multiarray_8hpp" startline="363" endline="366">multidimensional::multiarray&lt; T, depth &gt;::flat_at</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a7218e87b098538b3fc8fac776ca81dc0" compoundref="df/da4/multiarray_8hpp" startline="368" endline="371">multidimensional::multiarray&lt; T, depth &gt;::flat_at</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a2918a5db5f8a11863b38993cd06bfc5a" compoundref="df/da4/multiarray_8hpp" startline="357" endline="359">multidimensional::multiarray&lt; T, depth &gt;::get_elements</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a85f7f82bfe38a4ae9ec84182c6d16266" compoundref="df/da4/multiarray_8hpp" startline="538" endline="540">multidimensional::multiarray&lt; T, depth &gt;::lpNorm</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1ab6f6e91f1f50a8256056c7f45e998ede" compoundref="df/da4/multiarray_8hpp" startline="514" endline="517">multidimensional::multiarray&lt; T, depth &gt;::max</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1ac113a3e6fee37465ffe1ef6040a19bac" compoundref="df/da4/multiarray_8hpp" startline="519" endline="522">multidimensional::multiarray&lt; T, depth &gt;::min</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a4bcdeb88f81900d2f5f5242aed9162cc" compoundref="df/da4/multiarray_8hpp" startline="111" endline="121">multidimensional::multiarray&lt; T, depth &gt;::multiarray</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a3bb4c508ee784616ebd9ca33addcb7b4" compoundref="df/da4/multiarray_8hpp" startline="93" endline="97">multidimensional::multiarray&lt; T, depth &gt;::multiarray</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1af80f2fcb76848f68041ea648afb40c85" compoundref="df/da4/multiarray_8hpp" startline="451" endline="457">multidimensional::multiarray&lt; T, depth &gt;::operator*=</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a94db3f33eeef571b97f8256cacfd9163" compoundref="df/da4/multiarray_8hpp" startline="416" endline="422">multidimensional::multiarray&lt; T, depth &gt;::operator*=</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1acdd0f662ba00e2fd7d3020fceb4c7fe5" compoundref="df/da4/multiarray_8hpp" startline="495" endline="499">multidimensional::multiarray&lt; T, depth &gt;::operator*=</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1ae4eff17b0716aeb165f15816cef47d8f" compoundref="df/da4/multiarray_8hpp" startline="433" endline="439">multidimensional::multiarray&lt; T, depth &gt;::operator+=</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a0d88e72e51597d654b6dd94e7c93caed" compoundref="df/da4/multiarray_8hpp" startline="400" endline="406">multidimensional::multiarray&lt; T, depth &gt;::operator+=</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a61173992d03a23605d856652fdc8ff0e" compoundref="df/da4/multiarray_8hpp" startline="480" endline="484">multidimensional::multiarray&lt; T, depth &gt;::operator+=</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a0c6bb12e93956a4ffe51417a862393c5" compoundref="df/da4/multiarray_8hpp" startline="442" endline="448">multidimensional::multiarray&lt; T, depth &gt;::operator-=</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a0425916e1a84ac717f6b3763de12ea31" compoundref="df/da4/multiarray_8hpp" startline="408" endline="414">multidimensional::multiarray&lt; T, depth &gt;::operator-=</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a87c7c891d9630ec743f0bcd75e04a992" compoundref="df/da4/multiarray_8hpp" startline="487" endline="492">multidimensional::multiarray&lt; T, depth &gt;::operator-=</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1ab3a274497f4dae5a938b4d67ff590725" compoundref="df/da4/multiarray_8hpp" startline="460" endline="466">multidimensional::multiarray&lt; T, depth &gt;::operator/=</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a9a8fd2e161ea650db0f3ba84632388ec" compoundref="df/da4/multiarray_8hpp" startline="424" endline="430">multidimensional::multiarray&lt; T, depth &gt;::operator/=</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a685896d9e3ac6642788b6aee0d54681c" compoundref="df/da4/multiarray_8hpp" startline="502" endline="506">multidimensional::multiarray&lt; T, depth &gt;::operator/=</referencedby>
        <referencedby refid="d7/da5/namespacemultidimensional_1a7f3da0d0d4fcf00db82104c27cf167d0" compoundref="df/da4/multiarray_8hpp" startline="767" endline="776">multidimensional::scalar_map</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a53a6c38cecb992f7e135af4901c24f60" compoundref="df/da4/multiarray_8hpp" startline="470" endline="477">multidimensional::multiarray&lt; T, depth &gt;::scalar_map_assign</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a25ad0588248c1de785fd07d1e8327771" compoundref="df/da4/multiarray_8hpp" startline="256" endline="264">multidimensional::multiarray&lt; T, depth &gt;::set_vectorized</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1ad571a58ef74d80ea42ab143c7735b5fb" compoundref="df/da4/multiarray_8hpp" startline="558" endline="561">multidimensional::multiarray&lt; T, depth &gt;::size</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1ad62ddf265ac9bcf7a13e24c98f36079b" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray_1adf01f1572984e9636a81839be5f3b6c6" kindref="member">dimensions_type</ref></type>
        <definition>dimensions_type multidimensional::multiarray&lt; T, depth &gt;::get_cumul_length</definition>
        <argsstring>(const dimensions_type &amp;length) const</argsstring>
        <name>get_cumul_length</name>
        <qualifiedname>multidimensional::multiarray::get_cumul_length</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1adf01f1572984e9636a81839be5f3b6c6" kindref="member">dimensions_type</ref> &amp;</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="57" column="25" bodyfile="multidimensional/multiarray.hpp" bodystart="57" bodyend="64"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1aca0527dd01461a6b0e5979af8d399fc5" compoundref="df/da4/multiarray_8hpp" startline="563" endline="566">multidimensional::multiarray&lt; T, depth &gt;::length</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a7798825b221fe13945fb7f06a523c757" prot="private" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray_1ab0aa529ad59f5ea36eae86c4f9dcde29" kindref="member">size_type</ref></type>
        <definition>size_type multidimensional::multiarray&lt; T, depth &gt;::_flat_size</definition>
        <argsstring>() const noexcept</argsstring>
        <name>_flat_size</name>
        <qualifiedname>multidimensional::multiarray::_flat_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="582" column="19" bodyfile="multidimensional/multiarray.hpp" bodystart="582" bodyend="590"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1affae78ea84a5f1c5fac842f4129c8149" compoundref="df/da4/multiarray_8hpp" startline="56">multidimensional::multiarray&lt; T, depth &gt;::m_length</references>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a7696176134ece4eefab479ba75b1b0f8" compoundref="df/da4/multiarray_8hpp" startline="592" endline="602">multidimensional::multiarray&lt; T, depth &gt;::check_size</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a7696176134ece4eefab479ba75b1b0f8" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">void</ref></type>
        <definition>void multidimensional::multiarray&lt; T, depth &gt;::check_size</definition>
        <argsstring>() const</argsstring>
        <name>check_size</name>
        <qualifiedname>multidimensional::multiarray::check_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="592" column="14" bodyfile="multidimensional/multiarray.hpp" bodystart="592" bodyend="602"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1a7798825b221fe13945fb7f06a523c757" compoundref="df/da4/multiarray_8hpp" startline="582" endline="590">multidimensional::multiarray&lt; T, depth &gt;::_flat_size</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1add37e1c41b1dde04fc4f1b3e316db5cf" compoundref="df/da4/multiarray_8hpp" startline="123" endline="127">multidimensional::multiarray&lt; T, depth &gt;::multiarray</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a2a1ad17cc96910a23c00354dfa0c36bb" compoundref="df/da4/multiarray_8hpp" startline="99" endline="103">multidimensional::multiarray&lt; T, depth &gt;::multiarray</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a58de83e8e629b674274b88d588dfa6d3" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray_1ab0aa529ad59f5ea36eae86c4f9dcde29" kindref="member">size_type</ref></type>
        <definition>multiarray&lt; T, depth &gt;::size_type multidimensional::multiarray&lt; T, depth &gt;::flat_index</definition>
        <argsstring>(const index_type &amp;index) const noexcept</argsstring>
        <name>flat_index</name>
        <qualifiedname>multidimensional::multiarray::flat_index</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1acecc1afaa1d742fdd9eb9039182a82e2" kindref="member">index_type</ref> &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="604" column="19" bodyfile="multidimensional/multiarray.hpp" bodystart="613" bodyend="623"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a0141c6e09ccc03e02202610597a96a83" compoundref="df/da4/multiarray_8hpp" startline="240" endline="248">multidimensional::multiarray&lt; T, depth &gt;::at_vectorized</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a5757d174bade77621dff6d192e8177de" compoundref="df/da4/multiarray_8hpp" startline="231" endline="238">multidimensional::multiarray&lt; T, depth &gt;::at_vectorized</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a72843a896df64733c74232efdd5f2af6" compoundref="df/da4/multiarray_8hpp" startline="196" endline="208">multidimensional::multiarray&lt; T, depth &gt;::eigen_segment</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1adae0c97b216bcb79f4a3e4ddf6c55796" compoundref="df/da4/multiarray_8hpp" startline="210" endline="222">multidimensional::multiarray&lt; T, depth &gt;::eigen_segment</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a45e232891b85cf7c0f42c368d2277e54" compoundref="df/da4/multiarray_8hpp" startline="171" endline="181">multidimensional::multiarray&lt; T, depth &gt;::range</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a6a8013212a77da01ac9b4f5d94e46473" compoundref="df/da4/multiarray_8hpp" startline="183" endline="193">multidimensional::multiarray&lt; T, depth &gt;::range</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a25ad0588248c1de785fd07d1e8327771" compoundref="df/da4/multiarray_8hpp" startline="256" endline="264">multidimensional::multiarray&lt; T, depth &gt;::set_vectorized</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1afdbae946939f1379a4e55e7e8a0934ce" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d9/db9/classbool" kindref="compound">bool</ref></type>
        <definition>bool multidimensional::multiarray&lt; T, depth &gt;::check_bounds</definition>
        <argsstring>(const index_type &amp;index) const noexcept</argsstring>
        <name>check_bounds</name>
        <qualifiedname>multidimensional::multiarray::check_bounds</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1acecc1afaa1d742fdd9eb9039182a82e2" kindref="member">index_type</ref> &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="605" column="14" bodyfile="multidimensional/multiarray.hpp" bodystart="626" bodyend="638"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a72843a896df64733c74232efdd5f2af6" compoundref="df/da4/multiarray_8hpp" startline="196" endline="208">multidimensional::multiarray&lt; T, depth &gt;::eigen_segment</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1adae0c97b216bcb79f4a3e4ddf6c55796" compoundref="df/da4/multiarray_8hpp" startline="210" endline="222">multidimensional::multiarray&lt; T, depth &gt;::eigen_segment</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a304baf744947fa9042da5e4bb9cf70b9" compoundref="df/da4/multiarray_8hpp" startline="276" endline="311">multidimensional::multiarray&lt; T, depth &gt;::get_values</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a45e232891b85cf7c0f42c368d2277e54" compoundref="df/da4/multiarray_8hpp" startline="171" endline="181">multidimensional::multiarray&lt; T, depth &gt;::range</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a6a8013212a77da01ac9b4f5d94e46473" compoundref="df/da4/multiarray_8hpp" startline="183" endline="193">multidimensional::multiarray&lt; T, depth &gt;::range</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1acd08f67a199b8f422c2b179d11e22d4e" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d9/db9/classbool" kindref="compound">bool</ref></type>
        <definition>bool multidimensional::multiarray&lt; T, depth &gt;::check_bounds_end</definition>
        <argsstring>(const index_type &amp;index) const noexcept</argsstring>
        <name>check_bounds_end</name>
        <qualifiedname>multidimensional::multiarray::check_bounds_end</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1acecc1afaa1d742fdd9eb9039182a82e2" kindref="member">index_type</ref> &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="606" column="14" bodyfile="multidimensional/multiarray.hpp" bodystart="641" bodyend="653"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a72843a896df64733c74232efdd5f2af6" compoundref="df/da4/multiarray_8hpp" startline="196" endline="208">multidimensional::multiarray&lt; T, depth &gt;::eigen_segment</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1adae0c97b216bcb79f4a3e4ddf6c55796" compoundref="df/da4/multiarray_8hpp" startline="210" endline="222">multidimensional::multiarray&lt; T, depth &gt;::eigen_segment</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a45e232891b85cf7c0f42c368d2277e54" compoundref="df/da4/multiarray_8hpp" startline="171" endline="181">multidimensional::multiarray&lt; T, depth &gt;::range</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a6a8013212a77da01ac9b4f5d94e46473" compoundref="df/da4/multiarray_8hpp" startline="183" endline="193">multidimensional::multiarray&lt; T, depth &gt;::range</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="d7/d3f/classmultidimensional_1_1multiarray_1ae830324fe424eedf57cfe6c2cae0d47d" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">void</ref></type>
        <definition>void swap</definition>
        <argsstring>(multiarray&lt; value_type, depth &gt; &amp;lhs, multiarray&lt; value_type, depth &gt; &amp;rhs) noexcept</argsstring>
        <name>swap</name>
        <qualifiedname>multidimensional::multiarray::swap</qualifiedname>
        <param>
          <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1a15f6d396714c3619069900b3d846550c" kindref="member">value_type</ref>, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1a15f6d396714c3619069900b3d846550c" kindref="member">value_type</ref>, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="78" column="21" bodyfile="multidimensional/multiarray.hpp" bodystart="78" bodyend="85"/>
      </memberdef>
      <memberdef kind="friend" id="d7/d3f/classmultidimensional_1_1multiarray_1a6e80c27e0bac22f9a507415954e05bef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/db9/classbool" kindref="compound">bool</ref></type>
        <definition>bool operator==</definition>
        <argsstring>(const multiarray&lt; T, depth &gt; &amp;, const multiarray&lt; T, depth &gt; &amp;)</argsstring>
        <name>operator==</name>
        <qualifiedname>multidimensional::multiarray::operator==</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
          <defname>lhs</defname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
          <defname>rhs</defname>
        </param>
        <briefdescription>
<para>non-member op&apos;s </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="556" column="21" bodyfile="multidimensional/multiarray.hpp" bodystart="685" bodyend="688"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a8e52f1799408bbe05af7e7e3cfbc122f" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">constexpr</ref></type>
        <definition>constexpr multidimensional::multiarray&lt; T, depth &gt;::multiarray</definition>
        <argsstring>() noexcept</argsstring>
        <name>multiarray</name>
        <qualifiedname>multidimensional::multiarray::multiarray</qualifiedname>
        <briefdescription>
<para>=== constructors === </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="88" column="19" bodyfile="multidimensional/multiarray.hpp" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a3bb4c508ee784616ebd9ca33addcb7b4" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>multidimensional::multiarray&lt; T, depth &gt;::multiarray</definition>
        <argsstring>(dimensions_type length, const T &amp;value=T())</argsstring>
        <name>multiarray</name>
        <qualifiedname>multidimensional::multiarray::multiarray</qualifiedname>
        <param>
          <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray_1adf01f1572984e9636a81839be5f3b6c6" kindref="member">dimensions_type</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> T &amp;</type>
          <declname>value</declname>
          <defval>T()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="93" column="18" bodyfile="multidimensional/multiarray.hpp" bodystart="93" bodyend="97"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a2a1ad17cc96910a23c00354dfa0c36bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>multidimensional::multiarray&lt; T, depth &gt;::multiarray</definition>
        <argsstring>(dimensions_type length, const buffer_type &amp;elements)</argsstring>
        <name>multiarray</name>
        <qualifiedname>multidimensional::multiarray::multiarray</qualifiedname>
        <param>
          <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray_1adf01f1572984e9636a81839be5f3b6c6" kindref="member">dimensions_type</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1accf8399bc31caf7060fbc8469d1b5a5c" kindref="member">buffer_type</ref> &amp;</type>
          <declname>elements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="99" column="9" bodyfile="multidimensional/multiarray.hpp" bodystart="99" bodyend="103"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1a7696176134ece4eefab479ba75b1b0f8" compoundref="df/da4/multiarray_8hpp" startline="592" endline="602">multidimensional::multiarray&lt; T, depth &gt;::check_size</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a4bcdeb88f81900d2f5f5242aed9162cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">typename</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">container</ref></type>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_same_v&lt; <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">typename</ref> container::value_type, <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1a15f6d396714c3619069900b3d846550c" kindref="member">value_type</ref> &gt; &amp;&amp;!std::is_same_v&lt; <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">container</ref>, <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1accf8399bc31caf7060fbc8469d1b5a5c" kindref="member">buffer_type</ref> &gt;, <ref refid="d9/db9/classbool" kindref="compound">bool</ref> &gt;</type>
            <defval><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">true</ref></defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>multidimensional::multiarray&lt; T, depth &gt;::multiarray</definition>
        <argsstring>(dimensions_type length, const container &amp;elements)</argsstring>
        <name>multiarray</name>
        <qualifiedname>multidimensional::multiarray::multiarray</qualifiedname>
        <param>
          <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray_1adf01f1572984e9636a81839be5f3b6c6" kindref="member">dimensions_type</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">container</ref> &amp;</type>
          <declname>elements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="111" column="9" bodyfile="multidimensional/multiarray.hpp" bodystart="111" bodyend="121"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1add37e1c41b1dde04fc4f1b3e316db5cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>multidimensional::multiarray&lt; T, depth &gt;::multiarray</definition>
        <argsstring>(dimensions_type length, buffer_type &amp;&amp;elements)</argsstring>
        <name>multiarray</name>
        <qualifiedname>multidimensional::multiarray::multiarray</qualifiedname>
        <param>
          <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray_1adf01f1572984e9636a81839be5f3b6c6" kindref="member">dimensions_type</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray_1accf8399bc31caf7060fbc8469d1b5a5c" kindref="member">buffer_type</ref> &amp;&amp;</type>
          <declname>elements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="123" column="9" bodyfile="multidimensional/multiarray.hpp" bodystart="123" bodyend="127"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1a7696176134ece4eefab479ba75b1b0f8" compoundref="df/da4/multiarray_8hpp" startline="592" endline="602">multidimensional::multiarray&lt; T, depth &gt;::check_size</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a4ef0ebde4d24ec7fbb649e19dd965aac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>multidimensional::multiarray&lt; T, depth &gt;::multiarray</definition>
        <argsstring>(const multiarray&lt; T, depth &gt; &amp;)=default</argsstring>
        <name>multiarray</name>
        <qualifiedname>multidimensional::multiarray::multiarray</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
        </param>
        <briefdescription>
<para>Move &amp; copy constructors and assignment operators. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="130" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a5678345461584fa3e499d54707bfce16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>multidimensional::multiarray&lt; T, depth &gt;::multiarray</definition>
        <argsstring>(multiarray&lt; T, depth &gt; &amp;&amp;)=default</argsstring>
        <name>multiarray</name>
        <qualifiedname>multidimensional::multiarray::multiarray</qualifiedname>
        <param>
          <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="131" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1af2848c0df586f79cfd529319c20b58b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
        <definition>multiarray&lt; T, depth &gt; &amp; multidimensional::multiarray&lt; T, depth &gt;::operator=</definition>
        <argsstring>(const multiarray&lt; T, depth &gt; &amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>multidimensional::multiarray::operator=</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="133" column="20"/>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1af9a6cce15275148338c56c0252617b55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
        <definition>multiarray&lt; T, depth &gt; &amp; multidimensional::multiarray&lt; T, depth &gt;::operator=</definition>
        <argsstring>(multiarray&lt; T, depth &gt; &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>multidimensional::multiarray::operator=</qualifiedname>
        <param>
          <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="134" column="20"/>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a72736a3525d18e148ca409ec30ce62eb" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">constexpr</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1a00f4733e52bf048b2d53b9140458515d" kindref="member">iterator</ref></type>
        <definition>constexpr iterator multidimensional::multiarray&lt; T, depth &gt;::begin</definition>
        <argsstring>() noexcept</argsstring>
        <name>begin</name>
        <qualifiedname>multidimensional::multiarray::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="144" column="28" bodyfile="multidimensional/multiarray.hpp" bodystart="144" bodyend="147"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a6ffc643bd6786cfd0a006fbaf7ac6c85" compoundref="df/da4/multiarray_8hpp" startline="524" endline="527">multidimensional::multiarray&lt; T, depth &gt;::maxabs</referencedby>
        <referencedby refid="de/dbb/math__utils_8hpp_1a562a53ddc7418efed23325265f4a8e71" compoundref="de/dbb/math__utils_8hpp" startline="985" endline="988">maxabs</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1aa6b5df14222e419e4c0387c004f4f4c1" compoundref="df/da4/multiarray_8hpp" startline="529" endline="532">multidimensional::multiarray&lt; T, depth &gt;::minabs</referencedby>
        <referencedby refid="de/dbb/math__utils_8hpp_1ab9d441edc8ec14a9619d2181dacfe416" compoundref="de/dbb/math__utils_8hpp" startline="968" endline="970">power2</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1aad7e086f7c50fbd63b80dc62711581ba" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">constexpr</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1a00f4733e52bf048b2d53b9140458515d" kindref="member">iterator</ref></type>
        <definition>constexpr iterator multidimensional::multiarray&lt; T, depth &gt;::end</definition>
        <argsstring>() noexcept</argsstring>
        <name>end</name>
        <qualifiedname>multidimensional::multiarray::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="148" column="28" bodyfile="multidimensional/multiarray.hpp" bodystart="148" bodyend="151"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a72843a896df64733c74232efdd5f2af6" compoundref="df/da4/multiarray_8hpp" startline="196" endline="208">multidimensional::multiarray&lt; T, depth &gt;::eigen_segment</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1adae0c97b216bcb79f4a3e4ddf6c55796" compoundref="df/da4/multiarray_8hpp" startline="210" endline="222">multidimensional::multiarray&lt; T, depth &gt;::eigen_segment</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a6ffc643bd6786cfd0a006fbaf7ac6c85" compoundref="df/da4/multiarray_8hpp" startline="524" endline="527">multidimensional::multiarray&lt; T, depth &gt;::maxabs</referencedby>
        <referencedby refid="de/dbb/math__utils_8hpp_1a562a53ddc7418efed23325265f4a8e71" compoundref="de/dbb/math__utils_8hpp" startline="985" endline="988">maxabs</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1aa6b5df14222e419e4c0387c004f4f4c1" compoundref="df/da4/multiarray_8hpp" startline="529" endline="532">multidimensional::multiarray&lt; T, depth &gt;::minabs</referencedby>
        <referencedby refid="de/dbb/math__utils_8hpp_1ab9d441edc8ec14a9619d2181dacfe416" compoundref="de/dbb/math__utils_8hpp" startline="968" endline="970">power2</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a45e232891b85cf7c0f42c368d2277e54" compoundref="df/da4/multiarray_8hpp" startline="171" endline="181">multidimensional::multiarray&lt; T, depth &gt;::range</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a6a8013212a77da01ac9b4f5d94e46473" compoundref="df/da4/multiarray_8hpp" startline="183" endline="193">multidimensional::multiarray&lt; T, depth &gt;::range</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1ae8a6f4b3920580ae116d35f3490e709f" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">constexpr</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1aff7ef46a3572a152eb5921e02cf72b3a" kindref="member">const_iterator</ref></type>
        <definition>constexpr const_iterator multidimensional::multiarray&lt; T, depth &gt;::begin</definition>
        <argsstring>() const noexcept</argsstring>
        <name>begin</name>
        <qualifiedname>multidimensional::multiarray::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="153" column="34" bodyfile="multidimensional/multiarray.hpp" bodystart="153" bodyend="156"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1ad088042c4205750f6fb0760b5973d982" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">constexpr</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1aff7ef46a3572a152eb5921e02cf72b3a" kindref="member">const_iterator</ref></type>
        <definition>constexpr const_iterator multidimensional::multiarray&lt; T, depth &gt;::end</definition>
        <argsstring>() const noexcept</argsstring>
        <name>end</name>
        <qualifiedname>multidimensional::multiarray::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="157" column="34" bodyfile="multidimensional/multiarray.hpp" bodystart="157" bodyend="160"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a75f12a79c54cb1454f06261fb9baa185" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">constexpr</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1aff7ef46a3572a152eb5921e02cf72b3a" kindref="member">const_iterator</ref></type>
        <definition>constexpr const_iterator multidimensional::multiarray&lt; T, depth &gt;::cbegin</definition>
        <argsstring>() const noexcept</argsstring>
        <name>cbegin</name>
        <qualifiedname>multidimensional::multiarray::cbegin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="162" column="34" bodyfile="multidimensional/multiarray.hpp" bodystart="162" bodyend="165"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a11f84bb11d238d70d99922cf003cf420" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">constexpr</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1aff7ef46a3572a152eb5921e02cf72b3a" kindref="member">const_iterator</ref></type>
        <definition>constexpr const_iterator multidimensional::multiarray&lt; T, depth &gt;::cend</definition>
        <argsstring>() const noexcept</argsstring>
        <name>cend</name>
        <qualifiedname>multidimensional::multiarray::cend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="166" column="34" bodyfile="multidimensional/multiarray.hpp" bodystart="166" bodyend="169"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a45e232891b85cf7c0f42c368d2277e54" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">constexpr</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">auto</ref></type>
        <definition>constexpr auto multidimensional::multiarray&lt; T, depth &gt;::range</definition>
        <argsstring>(const index_type &amp;start, const index_type &amp;end)</argsstring>
        <name>range</name>
        <qualifiedname>multidimensional::multiarray::range</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1acecc1afaa1d742fdd9eb9039182a82e2" kindref="member">index_type</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1acecc1afaa1d742fdd9eb9039182a82e2" kindref="member">index_type</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="171" column="24" bodyfile="multidimensional/multiarray.hpp" bodystart="171" bodyend="181"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1afdbae946939f1379a4e55e7e8a0934ce" compoundref="df/da4/multiarray_8hpp" startline="626" endline="638">multidimensional::multiarray&lt; T, depth &gt;::check_bounds</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1acd08f67a199b8f422c2b179d11e22d4e" compoundref="df/da4/multiarray_8hpp" startline="641" endline="653">multidimensional::multiarray&lt; T, depth &gt;::check_bounds_end</references>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1aad7e086f7c50fbd63b80dc62711581ba" compoundref="df/da4/multiarray_8hpp" startline="148" endline="151">multidimensional::multiarray&lt; T, depth &gt;::end</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1a58de83e8e629b674274b88d588dfa6d3" compoundref="df/da4/multiarray_8hpp" startline="613" endline="623">multidimensional::multiarray&lt; T, depth &gt;::flat_index</references>
        <references refid="d7/da5/namespacemultidimensional_1aa29818b92f560c8415b50e8b43e5f80a" compoundref="dd/df3/ranged__view_8hpp" startline="44" endline="47">multidimensional::make_range</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a6a8013212a77da01ac9b4f5d94e46473" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">constexpr</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">auto</ref></type>
        <definition>constexpr auto multidimensional::multiarray&lt; T, depth &gt;::range</definition>
        <argsstring>(const index_type &amp;start, const index_type &amp;end) const</argsstring>
        <name>range</name>
        <qualifiedname>multidimensional::multiarray::range</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1acecc1afaa1d742fdd9eb9039182a82e2" kindref="member">index_type</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1acecc1afaa1d742fdd9eb9039182a82e2" kindref="member">index_type</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="183" column="24" bodyfile="multidimensional/multiarray.hpp" bodystart="183" bodyend="193"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1afdbae946939f1379a4e55e7e8a0934ce" compoundref="df/da4/multiarray_8hpp" startline="626" endline="638">multidimensional::multiarray&lt; T, depth &gt;::check_bounds</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1acd08f67a199b8f422c2b179d11e22d4e" compoundref="df/da4/multiarray_8hpp" startline="641" endline="653">multidimensional::multiarray&lt; T, depth &gt;::check_bounds_end</references>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1aad7e086f7c50fbd63b80dc62711581ba" compoundref="df/da4/multiarray_8hpp" startline="148" endline="151">multidimensional::multiarray&lt; T, depth &gt;::end</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1a58de83e8e629b674274b88d588dfa6d3" compoundref="df/da4/multiarray_8hpp" startline="613" endline="623">multidimensional::multiarray&lt; T, depth &gt;::flat_index</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a72843a896df64733c74232efdd5f2af6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">constexpr</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">auto</ref></type>
        <definition>constexpr auto multidimensional::multiarray&lt; T, depth &gt;::eigen_segment</definition>
        <argsstring>(const index_type &amp;start, const index_type &amp;end)</argsstring>
        <name>eigen_segment</name>
        <qualifiedname>multidimensional::multiarray::eigen_segment</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1acecc1afaa1d742fdd9eb9039182a82e2" kindref="member">index_type</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1acecc1afaa1d742fdd9eb9039182a82e2" kindref="member">index_type</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>return segment including start and end </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="196" column="24" bodyfile="multidimensional/multiarray.hpp" bodystart="196" bodyend="208"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1afdbae946939f1379a4e55e7e8a0934ce" compoundref="df/da4/multiarray_8hpp" startline="626" endline="638">multidimensional::multiarray&lt; T, depth &gt;::check_bounds</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1acd08f67a199b8f422c2b179d11e22d4e" compoundref="df/da4/multiarray_8hpp" startline="641" endline="653">multidimensional::multiarray&lt; T, depth &gt;::check_bounds_end</references>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1aad7e086f7c50fbd63b80dc62711581ba" compoundref="df/da4/multiarray_8hpp" startline="148" endline="151">multidimensional::multiarray&lt; T, depth &gt;::end</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1a58de83e8e629b674274b88d588dfa6d3" compoundref="df/da4/multiarray_8hpp" startline="613" endline="623">multidimensional::multiarray&lt; T, depth &gt;::flat_index</references>
        <referencedby refid="d5/d5f/classdataContainerBase_1a8ab6ca579df1cff6717d9fc17c37cdc9" compoundref="da/dbc/data__container_8hpp" startline="153" endline="155">dataContainerBase&lt; Q, rank &gt;::eigen_segment</referencedby>
        <referencedby refid="d5/d5f/classdataContainerBase_1a6d65f15d6b8115ba71c9ec5145e63302" compoundref="da/dbc/data__container_8hpp" startline="157" endline="159">dataContainerBase&lt; Q, rank &gt;::eigen_segment</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1adae0c97b216bcb79f4a3e4ddf6c55796" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">constexpr</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">auto</ref></type>
        <definition>constexpr auto multidimensional::multiarray&lt; T, depth &gt;::eigen_segment</definition>
        <argsstring>(const index_type &amp;start, const index_type &amp;end) const</argsstring>
        <name>eigen_segment</name>
        <qualifiedname>multidimensional::multiarray::eigen_segment</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1acecc1afaa1d742fdd9eb9039182a82e2" kindref="member">index_type</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1acecc1afaa1d742fdd9eb9039182a82e2" kindref="member">index_type</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="210" column="24" bodyfile="multidimensional/multiarray.hpp" bodystart="210" bodyend="222"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1afdbae946939f1379a4e55e7e8a0934ce" compoundref="df/da4/multiarray_8hpp" startline="626" endline="638">multidimensional::multiarray&lt; T, depth &gt;::check_bounds</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1acd08f67a199b8f422c2b179d11e22d4e" compoundref="df/da4/multiarray_8hpp" startline="641" endline="653">multidimensional::multiarray&lt; T, depth &gt;::check_bounds_end</references>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1aad7e086f7c50fbd63b80dc62711581ba" compoundref="df/da4/multiarray_8hpp" startline="148" endline="151">multidimensional::multiarray&lt; T, depth &gt;::end</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1a58de83e8e629b674274b88d588dfa6d3" compoundref="df/da4/multiarray_8hpp" startline="613" endline="623">multidimensional::multiarray&lt; T, depth &gt;::flat_index</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a406069311c6004e5e303408959e3b7bc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/db9/classbool" kindref="compound">bool</ref></type>
        <definition>bool multidimensional::multiarray&lt; T, depth &gt;::is_same_length</definition>
        <argsstring>(const multiarray&lt; value_type, depth &gt; &amp;other) const</argsstring>
        <name>is_same_length</name>
        <qualifiedname>multidimensional::multiarray::is_same_length</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1a15f6d396714c3619069900b3d846550c" kindref="member">value_type</ref>, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="225" column="14" bodyfile="multidimensional/multiarray.hpp" bodystart="225" bodyend="227"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1affae78ea84a5f1c5fac842f4129c8149" compoundref="df/da4/multiarray_8hpp" startline="56">multidimensional::multiarray&lt; T, depth &gt;::m_length</references>
        <referencedby refid="d5/d5f/classdataContainerBase_1a72e6e78cae86e3036aea7d4f6b477401" compoundref="da/dbc/data__container_8hpp" startline="148" endline="151">dataContainerBase&lt; Q, rank &gt;::add_vec</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1af80f2fcb76848f68041ea648afb40c85" compoundref="df/da4/multiarray_8hpp" startline="451" endline="457">multidimensional::multiarray&lt; T, depth &gt;::operator*=</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a94db3f33eeef571b97f8256cacfd9163" compoundref="df/da4/multiarray_8hpp" startline="416" endline="422">multidimensional::multiarray&lt; T, depth &gt;::operator*=</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1ae4eff17b0716aeb165f15816cef47d8f" compoundref="df/da4/multiarray_8hpp" startline="433" endline="439">multidimensional::multiarray&lt; T, depth &gt;::operator+=</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a0d88e72e51597d654b6dd94e7c93caed" compoundref="df/da4/multiarray_8hpp" startline="400" endline="406">multidimensional::multiarray&lt; T, depth &gt;::operator+=</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a0c6bb12e93956a4ffe51417a862393c5" compoundref="df/da4/multiarray_8hpp" startline="442" endline="448">multidimensional::multiarray&lt; T, depth &gt;::operator-=</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a0425916e1a84ac717f6b3763de12ea31" compoundref="df/da4/multiarray_8hpp" startline="408" endline="414">multidimensional::multiarray&lt; T, depth &gt;::operator-=</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1ab3a274497f4dae5a938b4d67ff590725" compoundref="df/da4/multiarray_8hpp" startline="460" endline="466">multidimensional::multiarray&lt; T, depth &gt;::operator/=</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a9a8fd2e161ea650db0f3ba84632388ec" compoundref="df/da4/multiarray_8hpp" startline="424" endline="430">multidimensional::multiarray&lt; T, depth &gt;::operator/=</referencedby>
        <referencedby refid="d5/d5f/classdataContainerBase_1a22ef70f4e159e8ff4cff0bf02a257c68" compoundref="da/dbc/data__container_8hpp" startline="132" endline="135">dataContainerBase&lt; Q, rank &gt;::set_vec</referencedby>
        <referencedby refid="d5/d5f/classdataContainerBase_1a1cb357f678027c6170ae53ca8131c107" compoundref="da/dbc/data__container_8hpp" startline="127" endline="130">dataContainerBase&lt; Q, rank &gt;::set_vec</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a5757d174bade77621dff6d192e8177de" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>pos_first_freq_index</declname>
            <defname>pos_first_freq_index</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>freqrank</declname>
            <defname>freqrank</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>vecsize</declname>
            <defname>vecsize</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Types</declname>
            <defname>Types</defname>
          </param>
          <param>
            <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">typename</ref> std::enable_if_t&lt;(sizeof...(<ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">Types</ref>)==<ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref>) <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">and</ref>(<ref refid="dd/de3/template__utils_8hpp_1a0ac09345c826fb8f02936a52f0704860" kindref="member">are_all_integral</ref>&lt; size_t, Types... &gt;::value) <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">and</ref>(<ref refid="dd/de3/template__utils_8hpp_1a482112a8e4d5ac3b805a73f5c7ad1b6a" kindref="member">are_all_unsigned</ref>&lt; size_t, Types... &gt;::value) <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">and</ref>(<ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">pos_first_freq_index</ref>+<ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">freqrank</ref>&lt; <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref>), <ref refid="d9/db9/classbool" kindref="compound">bool</ref> &gt;</type>
            <defval><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">true</ref></defval>
          </param>
        </templateparamlist>
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">constexpr</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">auto</ref></type>
        <definition>constexpr auto multidimensional::multiarray&lt; T, depth &gt;::at_vectorized</definition>
        <argsstring>(Types &amp;...i) const -&gt; Eigen::Matrix&lt; T, vecsize, 1 &gt;</argsstring>
        <name>at_vectorized</name>
        <qualifiedname>multidimensional::multiarray::at_vectorized</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">Types</ref> &amp;...</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="231" column="24" bodyfile="multidimensional/multiarray.hpp" bodystart="231" bodyend="238"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1a58de83e8e629b674274b88d588dfa6d3" compoundref="df/da4/multiarray_8hpp" startline="613" endline="623">multidimensional::multiarray&lt; T, depth &gt;::flat_index</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1affae78ea84a5f1c5fac842f4129c8149" compoundref="df/da4/multiarray_8hpp" startline="56">multidimensional::multiarray&lt; T, depth &gt;::m_length</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a0141c6e09ccc03e02202610597a96a83" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>vecsize</declname>
            <defname>vecsize</defname>
          </param>
        </templateparamlist>
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">constexpr</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">auto</ref></type>
        <definition>constexpr auto multidimensional::multiarray&lt; T, depth &gt;::at_vectorized</definition>
        <argsstring>(const index_type &amp;idx) const -&gt; Eigen::Matrix&lt; T, vecsize, 1 &gt;</argsstring>
        <name>at_vectorized</name>
        <qualifiedname>multidimensional::multiarray::at_vectorized</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1acecc1afaa1d742fdd9eb9039182a82e2" kindref="member">index_type</ref> &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="240" column="24" bodyfile="multidimensional/multiarray.hpp" bodystart="240" bodyend="248"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1a58de83e8e629b674274b88d588dfa6d3" compoundref="df/da4/multiarray_8hpp" startline="613" endline="623">multidimensional::multiarray&lt; T, depth &gt;::flat_index</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1affae78ea84a5f1c5fac842f4129c8149" compoundref="df/da4/multiarray_8hpp" startline="56">multidimensional::multiarray&lt; T, depth &gt;::m_length</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a1a0f7133f9225325c79118a154b6e4f6" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>vecsize</declname>
            <defname>vecsize</defname>
          </param>
        </templateparamlist>
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">constexpr</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">auto</ref></type>
        <definition>constexpr auto multidimensional::multiarray&lt; T, depth &gt;::at_vectorized</definition>
        <argsstring>(const std::size_t flat_idx) const -&gt; Eigen::Matrix&lt; T, vecsize, 1 &gt;</argsstring>
        <name>at_vectorized</name>
        <qualifiedname>multidimensional::multiarray::at_vectorized</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> std::size_t</type>
          <declname>flat_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="250" column="24" bodyfile="multidimensional/multiarray.hpp" bodystart="250" bodyend="254"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a25ad0588248c1de785fd07d1e8327771" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>vecsize</declname>
            <defname>vecsize</defname>
          </param>
        </templateparamlist>
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">void</ref></type>
        <definition>void multidimensional::multiarray&lt; T, depth &gt;::set_vectorized</definition>
        <argsstring>(const Eigen::Matrix&lt; T, vecsize, 1 &gt; &amp;value, const index_type &amp;idx)</argsstring>
        <name>set_vectorized</name>
        <qualifiedname>multidimensional::multiarray::set_vectorized</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> Eigen::Matrix&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">vecsize</ref>, 1 &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1acecc1afaa1d742fdd9eb9039182a82e2" kindref="member">index_type</ref> &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="256" column="14" bodyfile="multidimensional/multiarray.hpp" bodystart="256" bodyend="264"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1a58de83e8e629b674274b88d588dfa6d3" compoundref="df/da4/multiarray_8hpp" startline="613" endline="623">multidimensional::multiarray&lt; T, depth &gt;::flat_index</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1affae78ea84a5f1c5fac842f4129c8149" compoundref="df/da4/multiarray_8hpp" startline="56">multidimensional::multiarray&lt; T, depth &gt;::m_length</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1adc2341497fc392f72af8c3d3190a7b13" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="d7/d59/data__structures_8hpp_1a0bcc6ac8e774a3c55d2df75dc46c8b37" kindref="member">my_index_t</ref></type>
            <declname>num_first_dims</declname>
            <defname>num_first_dims</defname>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>size_t multidimensional::multiarray&lt; T, depth &gt;::get_flatindex_ini</definition>
        <argsstring>(const index_type &amp;index) const</argsstring>
        <name>get_flatindex_ini</name>
        <qualifiedname>multidimensional::multiarray::get_flatindex_ini</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1acecc1afaa1d742fdd9eb9039182a82e2" kindref="member">index_type</ref> &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="267" column="16" bodyfile="multidimensional/multiarray.hpp" bodystart="267" bodyend="273"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1afd141265dea8d95a0203887fa16b6989" compoundref="df/da4/multiarray_8hpp" startline="65">multidimensional::multiarray&lt; T, depth &gt;::m_length_cumulative</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a304baf744947fa9042da5e4bb9cf70b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="d7/d59/data__structures_8hpp_1a0bcc6ac8e774a3c55d2df75dc46c8b37" kindref="member">my_index_t</ref></type>
            <declname>numberFrequencyDims</declname>
            <defname>numberFrequencyDims</defname>
          </param>
          <param>
            <type><ref refid="d7/d59/data__structures_8hpp_1a0bcc6ac8e774a3c55d2df75dc46c8b37" kindref="member">my_index_t</ref></type>
            <declname>pos_first_freqpoint</declname>
            <defname>pos_first_freqpoint</defname>
          </param>
          <param>
            <type><ref refid="d7/d59/data__structures_8hpp_1a0bcc6ac8e774a3c55d2df75dc46c8b37" kindref="member">my_index_t</ref></type>
            <declname>vecsize</declname>
            <defname>vecsize</defname>
          </param>
          <param>
            <type><ref refid="d7/d59/data__structures_8hpp_1a0bcc6ac8e774a3c55d2df75dc46c8b37" kindref="member">my_index_t</ref></type>
            <declname>sample_size</declname>
            <defname>sample_size</defname>
          </param>
        </templateparamlist>
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">auto</ref></type>
        <definition>auto multidimensional::multiarray&lt; T, depth &gt;::get_values</definition>
        <argsstring>(const index_type &amp;index) const -&gt; Eigen::Matrix&lt; T, vecsize, numberFrequencyDims==1 ? sample_size :(numberFrequencyDims==2 ? sample_size *sample_size :sample_size *sample_size *sample_size)&gt;</argsstring>
        <name>get_values</name>
        <qualifiedname>multidimensional::multiarray::get_values</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1acecc1afaa1d742fdd9eb9039182a82e2" kindref="member">index_type</ref> &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="276" column="14" bodyfile="multidimensional/multiarray.hpp" bodystart="276" bodyend="311"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1afdbae946939f1379a4e55e7e8a0934ce" compoundref="df/da4/multiarray_8hpp" startline="626" endline="638">multidimensional::multiarray&lt; T, depth &gt;::check_bounds</references>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1afd141265dea8d95a0203887fa16b6989" compoundref="df/da4/multiarray_8hpp" startline="65">multidimensional::multiarray&lt; T, depth &gt;::m_length_cumulative</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1ae632dc0f9694fb2d585f53d007d97448" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; multidimensional::multiarray&lt; T, depth &gt;::at</definition>
        <argsstring>(const index_type &amp;index)</argsstring>
        <name>at</name>
        <qualifiedname>multidimensional::multiarray::at</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1acecc1afaa1d742fdd9eb9039182a82e2" kindref="member">index_type</ref> &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>=== public member functions === </para>
        </briefdescription>
        <detaileddescription>
<para>random element access </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="317" column="11" bodyfile="multidimensional/multiarray.hpp" bodystart="656" bodyend="667"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <referencedby refid="d5/d5f/classdataContainerBase_1a57fc098f0ce433faa0c310ab412dafc7" compoundref="da/dbc/data__container_8hpp" startline="85" endline="85">dataContainerBase&lt; Q, rank &gt;::at</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1aa97a456adb759b57b194617dd8a7d0ee" compoundref="df/da4/multiarray_8hpp" startline="324" endline="327">multidimensional::multiarray&lt; T, depth &gt;::at</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1ac2bf92d856e69dd8d14c57a51c9a7013" compoundref="df/da4/multiarray_8hpp" startline="330" endline="333">multidimensional::multiarray&lt; T, depth &gt;::at</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1aece079fe4fba332aa9b16511e94735c3" compoundref="df/da4/multiarray_8hpp" startline="336" endline="339">multidimensional::multiarray&lt; T, depth &gt;::operator()</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1af391bb83902677481ae0045c5a66db36" compoundref="df/da4/multiarray_8hpp" startline="342" endline="345">multidimensional::multiarray&lt; T, depth &gt;::operator()</referencedby>
        <referencedby refid="d5/d5f/classdataContainerBase_1aefc529ad1483b4bb631d586e105051d9" compoundref="da/dbc/data__container_8hpp" startline="104" endline="104">dataContainerBase&lt; Q, rank &gt;::setvert</referencedby>
        <referencedby refid="d5/d5f/classdataContainerBase_1a4619283941f9095c26f409442c2431db" compoundref="da/dbc/data__container_8hpp" startline="102" endline="102">dataContainerBase&lt; Q, rank &gt;::setvert</referencedby>
        <referencedby refid="d5/d5f/classdataContainerBase_1a3ef7520d345f57577a35ebe048897d0e" compoundref="da/dbc/data__container_8hpp" startline="79" endline="79">dataContainerBase&lt; Q, rank &gt;::val</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a951e50bfec426e156ff016409b837e28" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> T &amp;</type>
        <definition>const T &amp; multidimensional::multiarray&lt; T, depth &gt;::at</definition>
        <argsstring>(const index_type &amp;index) const</argsstring>
        <name>at</name>
        <qualifiedname>multidimensional::multiarray::at</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1acecc1afaa1d742fdd9eb9039182a82e2" kindref="member">index_type</ref> &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="318" column="17" bodyfile="multidimensional/multiarray.hpp" bodystart="670" bodyend="681"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1aa97a456adb759b57b194617dd8a7d0ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Types</declname>
            <defname>Types</defname>
          </param>
          <param>
            <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">typename</ref> std::enable_if_t&lt; sizeof...(<ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">Types</ref>)==<ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref>, <ref refid="d9/db9/classbool" kindref="compound">bool</ref> &gt;</type>
            <defval><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">true</ref></defval>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T &amp; multidimensional::multiarray&lt; T, depth &gt;::at</definition>
        <argsstring>(const Types &amp;...i)</argsstring>
        <name>at</name>
        <qualifiedname>multidimensional::multiarray::at</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">Types</ref> &amp;...</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="324" column="11" bodyfile="multidimensional/multiarray.hpp" bodystart="324" bodyend="327"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1ae632dc0f9694fb2d585f53d007d97448" compoundref="df/da4/multiarray_8hpp" startline="656" endline="667">multidimensional::multiarray&lt; T, depth &gt;::at</references>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1ac2bf92d856e69dd8d14c57a51c9a7013" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Types</declname>
            <defname>Types</defname>
          </param>
          <param>
            <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">typename</ref> std::enable_if_t&lt; sizeof...(<ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">Types</ref>)==<ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref>, <ref refid="d9/db9/classbool" kindref="compound">bool</ref> &gt;</type>
            <defval><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">true</ref></defval>
          </param>
        </templateparamlist>
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> T &amp;</type>
        <definition>const T &amp; multidimensional::multiarray&lt; T, depth &gt;::at</definition>
        <argsstring>(const Types &amp;...i) const</argsstring>
        <name>at</name>
        <qualifiedname>multidimensional::multiarray::at</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">Types</ref> &amp;...</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="330" column="17" bodyfile="multidimensional/multiarray.hpp" bodystart="330" bodyend="333"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1ae632dc0f9694fb2d585f53d007d97448" compoundref="df/da4/multiarray_8hpp" startline="656" endline="667">multidimensional::multiarray&lt; T, depth &gt;::at</references>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1aece079fe4fba332aa9b16511e94735c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Types</declname>
            <defname>Types</defname>
          </param>
          <param>
            <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">typename</ref> std::enable_if_t&lt; sizeof...(<ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">Types</ref>)==<ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref>, <ref refid="d9/db9/classbool" kindref="compound">bool</ref> &gt;</type>
            <defval><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">true</ref></defval>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T &amp; multidimensional::multiarray&lt; T, depth &gt;::operator()</definition>
        <argsstring>(const Types &amp;...i)</argsstring>
        <name>operator()</name>
        <qualifiedname>multidimensional::multiarray::operator()</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">Types</ref> &amp;...</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="336" column="11" bodyfile="multidimensional/multiarray.hpp" bodystart="336" bodyend="339"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1ae632dc0f9694fb2d585f53d007d97448" compoundref="df/da4/multiarray_8hpp" startline="656" endline="667">multidimensional::multiarray&lt; T, depth &gt;::at</references>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1af391bb83902677481ae0045c5a66db36" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Types</declname>
            <defname>Types</defname>
          </param>
          <param>
            <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">typename</ref> std::enable_if_t&lt; sizeof...(<ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">Types</ref>)==<ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref>, <ref refid="d9/db9/classbool" kindref="compound">bool</ref> &gt;</type>
            <defval><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">true</ref></defval>
          </param>
        </templateparamlist>
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> T &amp;</type>
        <definition>const T &amp; multidimensional::multiarray&lt; T, depth &gt;::operator()</definition>
        <argsstring>(const Types &amp;...i) const</argsstring>
        <name>operator()</name>
        <qualifiedname>multidimensional::multiarray::operator()</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">Types</ref> &amp;...</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="342" column="17" bodyfile="multidimensional/multiarray.hpp" bodystart="342" bodyend="345"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1ae632dc0f9694fb2d585f53d007d97448" compoundref="df/da4/multiarray_8hpp" startline="656" endline="667">multidimensional::multiarray&lt; T, depth &gt;::at</references>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1ab0eb44d006398d29be417ed6b34ecb10" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T * multidimensional::multiarray&lt; T, depth &gt;::data</definition>
        <argsstring>() noexcept</argsstring>
        <name>data</name>
        <qualifiedname>multidimensional::multiarray::data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="347" column="11" bodyfile="multidimensional/multiarray.hpp" bodystart="347" bodyend="350"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a52ab95f511cdd77c599ff3431dc60790" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> T *</type>
        <definition>const T * multidimensional::multiarray&lt; T, depth &gt;::data</definition>
        <argsstring>() const noexcept</argsstring>
        <name>data</name>
        <qualifiedname>multidimensional::multiarray::data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="352" column="17" bodyfile="multidimensional/multiarray.hpp" bodystart="352" bodyend="355"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a2918a5db5f8a11863b38993cd06bfc5a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray_1accf8399bc31caf7060fbc8469d1b5a5c" kindref="member">buffer_type</ref></type>
        <definition>buffer_type multidimensional::multiarray&lt; T, depth &gt;::get_elements</definition>
        <argsstring>() const</argsstring>
        <name>get_elements</name>
        <qualifiedname>multidimensional::multiarray::get_elements</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="357" column="21" bodyfile="multidimensional/multiarray.hpp" bodystart="357" bodyend="359"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
        <referencedby refid="de/dbb/math__utils_8hpp_1a736d3a5d01a734a6830c58d51e04b785" compoundref="de/dbb/math__utils_8hpp" startline="775" endline="788">get_slice</referencedby>
        <referencedby refid="de/dbb/math__utils_8hpp_1a7387e2c9cc91f8ff52731338f1fd21f2" compoundref="de/dbb/math__utils_8hpp" startline="793" endline="822">partial_deriv</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1ae95e38ba06e10e921ed2fe0101bf699f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; multidimensional::multiarray&lt; T, depth &gt;::flat_at</definition>
        <argsstring>(size_type i)</argsstring>
        <name>flat_at</name>
        <qualifiedname>multidimensional::multiarray::flat_at</qualifiedname>
        <param>
          <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray_1ab0aa529ad59f5ea36eae86c4f9dcde29" kindref="member">size_type</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>flat access </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="363" column="11" bodyfile="multidimensional/multiarray.hpp" bodystart="363" bodyend="366"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
        <referencedby refid="d5/d5f/classdataContainerBase_1af8da5de4958e6394f3700dddba32956b" compoundref="da/dbc/data__container_8hpp" startline="63" endline="66">dataContainerBase&lt; Q, rank &gt;::acc</referencedby>
        <referencedby refid="d5/d5f/classdataContainerBase_1a554ee3f67bf16bd9438c9f056bcd58a2" compoundref="da/dbc/data__container_8hpp" startline="68" endline="71">dataContainerBase&lt; Q, rank &gt;::direct_set</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1aa2b57a9ec50a1547ec10ddeb2c031ef0" compoundref="df/da4/multiarray_8hpp" startline="373" endline="376">multidimensional::multiarray&lt; T, depth &gt;::operator[]</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a4f6e9bb8dcef8078e598d1ab9236c26a" compoundref="df/da4/multiarray_8hpp" startline="378" endline="381">multidimensional::multiarray&lt; T, depth &gt;::operator[]</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a7218e87b098538b3fc8fac776ca81dc0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> T &amp;</type>
        <definition>const T &amp; multidimensional::multiarray&lt; T, depth &gt;::flat_at</definition>
        <argsstring>(size_type i) const</argsstring>
        <name>flat_at</name>
        <qualifiedname>multidimensional::multiarray::flat_at</qualifiedname>
        <param>
          <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray_1ab0aa529ad59f5ea36eae86c4f9dcde29" kindref="member">size_type</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="368" column="17" bodyfile="multidimensional/multiarray.hpp" bodystart="368" bodyend="371"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1aa2b57a9ec50a1547ec10ddeb2c031ef0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; multidimensional::multiarray&lt; T, depth &gt;::operator[]</definition>
        <argsstring>(size_type i)</argsstring>
        <name>operator[]</name>
        <qualifiedname>multidimensional::multiarray::operator[]</qualifiedname>
        <param>
          <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray_1ab0aa529ad59f5ea36eae86c4f9dcde29" kindref="member">size_type</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="373" column="11" bodyfile="multidimensional/multiarray.hpp" bodystart="373" bodyend="376"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1ae95e38ba06e10e921ed2fe0101bf699f" compoundref="df/da4/multiarray_8hpp" startline="363" endline="366">multidimensional::multiarray&lt; T, depth &gt;::flat_at</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a4f6e9bb8dcef8078e598d1ab9236c26a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> T &amp;</type>
        <definition>const T &amp; multidimensional::multiarray&lt; T, depth &gt;::operator[]</definition>
        <argsstring>(size_type i) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>multidimensional::multiarray::operator[]</qualifiedname>
        <param>
          <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray_1ab0aa529ad59f5ea36eae86c4f9dcde29" kindref="member">size_type</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="378" column="17" bodyfile="multidimensional/multiarray.hpp" bodystart="378" bodyend="381"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1ae95e38ba06e10e921ed2fe0101bf699f" compoundref="df/da4/multiarray_8hpp" startline="363" endline="366">multidimensional::multiarray&lt; T, depth &gt;::flat_at</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1ad33f2cb2edb8133098b9e06731669f96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">typename</ref> Q</type>
          </param>
          <param>
            <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">typename</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">R</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
        <definition>multiarray&lt; T, depth &gt; &amp; multidimensional::multiarray&lt; T, depth &gt;::elementwise_map_assign</definition>
        <argsstring>(Q op, const multiarray&lt; R, depth &gt; &amp;rhs)</argsstring>
        <name>elementwise_map_assign</name>
        <qualifiedname>multidimensional::multiarray::elementwise_map_assign</qualifiedname>
        <param>
          <type>Q</type>
          <declname>op</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">R</ref>, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>elementwise arithmetics-assignment op&apos;s </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="385" column="20" bodyfile="multidimensional/multiarray.hpp" bodystart="385" bodyend="398"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1aca0527dd01461a6b0e5979af8d399fc5" compoundref="df/da4/multiarray_8hpp" startline="563" endline="566">multidimensional::multiarray&lt; T, depth &gt;::length</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a0d88e72e51597d654b6dd94e7c93caed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
        <definition>multiarray&lt; T, depth &gt; &amp; multidimensional::multiarray&lt; T, depth &gt;::operator+=</definition>
        <argsstring>(const multiarray&lt; T, depth &gt; &amp;rhs)</argsstring>
        <name>operator+=</name>
        <qualifiedname>multidimensional::multiarray::operator+=</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="400" column="20" bodyfile="multidimensional/multiarray.hpp" bodystart="400" bodyend="406"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1a406069311c6004e5e303408959e3b7bc" compoundref="df/da4/multiarray_8hpp" startline="225" endline="227">multidimensional::multiarray&lt; T, depth &gt;::is_same_length</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a0425916e1a84ac717f6b3763de12ea31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
        <definition>multiarray&lt; T, depth &gt; &amp; multidimensional::multiarray&lt; T, depth &gt;::operator-=</definition>
        <argsstring>(const multiarray&lt; T, depth &gt; &amp;rhs)</argsstring>
        <name>operator-=</name>
        <qualifiedname>multidimensional::multiarray::operator-=</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="408" column="20" bodyfile="multidimensional/multiarray.hpp" bodystart="408" bodyend="414"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1a406069311c6004e5e303408959e3b7bc" compoundref="df/da4/multiarray_8hpp" startline="225" endline="227">multidimensional::multiarray&lt; T, depth &gt;::is_same_length</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a94db3f33eeef571b97f8256cacfd9163" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
        <definition>multiarray&lt; T, depth &gt; &amp; multidimensional::multiarray&lt; T, depth &gt;::operator*=</definition>
        <argsstring>(const multiarray&lt; T, depth &gt; &amp;rhs)</argsstring>
        <name>operator*=</name>
        <qualifiedname>multidimensional::multiarray::operator*=</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="416" column="20" bodyfile="multidimensional/multiarray.hpp" bodystart="416" bodyend="422"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1a406069311c6004e5e303408959e3b7bc" compoundref="df/da4/multiarray_8hpp" startline="225" endline="227">multidimensional::multiarray&lt; T, depth &gt;::is_same_length</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a9a8fd2e161ea650db0f3ba84632388ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
        <definition>multiarray&lt; T, depth &gt; &amp; multidimensional::multiarray&lt; T, depth &gt;::operator/=</definition>
        <argsstring>(const multiarray&lt; T, depth &gt; &amp;rhs)</argsstring>
        <name>operator/=</name>
        <qualifiedname>multidimensional::multiarray::operator/=</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="424" column="20" bodyfile="multidimensional/multiarray.hpp" bodystart="424" bodyend="430"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1a406069311c6004e5e303408959e3b7bc" compoundref="df/da4/multiarray_8hpp" startline="225" endline="227">multidimensional::multiarray&lt; T, depth &gt;::is_same_length</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1ae4eff17b0716aeb165f15816cef47d8f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">typename</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">R</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
        <definition>multiarray&lt; T, depth &gt; &amp; multidimensional::multiarray&lt; T, depth &gt;::operator+=</definition>
        <argsstring>(const multiarray&lt; R, depth &gt; &amp;rhs)</argsstring>
        <name>operator+=</name>
        <qualifiedname>multidimensional::multiarray::operator+=</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">R</ref>, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="433" column="20" bodyfile="multidimensional/multiarray.hpp" bodystart="433" bodyend="439"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1a406069311c6004e5e303408959e3b7bc" compoundref="df/da4/multiarray_8hpp" startline="225" endline="227">multidimensional::multiarray&lt; T, depth &gt;::is_same_length</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a0c6bb12e93956a4ffe51417a862393c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">typename</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">R</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
        <definition>multiarray&lt; T, depth &gt; &amp; multidimensional::multiarray&lt; T, depth &gt;::operator-=</definition>
        <argsstring>(const multiarray&lt; R, depth &gt; &amp;rhs)</argsstring>
        <name>operator-=</name>
        <qualifiedname>multidimensional::multiarray::operator-=</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">R</ref>, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="442" column="20" bodyfile="multidimensional/multiarray.hpp" bodystart="442" bodyend="448"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1a406069311c6004e5e303408959e3b7bc" compoundref="df/da4/multiarray_8hpp" startline="225" endline="227">multidimensional::multiarray&lt; T, depth &gt;::is_same_length</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1af80f2fcb76848f68041ea648afb40c85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">typename</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">R</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
        <definition>multiarray&lt; T, depth &gt; &amp; multidimensional::multiarray&lt; T, depth &gt;::operator*=</definition>
        <argsstring>(const multiarray&lt; R, depth &gt; &amp;rhs)</argsstring>
        <name>operator*=</name>
        <qualifiedname>multidimensional::multiarray::operator*=</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">R</ref>, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="451" column="20" bodyfile="multidimensional/multiarray.hpp" bodystart="451" bodyend="457"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1a406069311c6004e5e303408959e3b7bc" compoundref="df/da4/multiarray_8hpp" startline="225" endline="227">multidimensional::multiarray&lt; T, depth &gt;::is_same_length</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1ab3a274497f4dae5a938b4d67ff590725" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">typename</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">R</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
        <definition>multiarray&lt; T, depth &gt; &amp; multidimensional::multiarray&lt; T, depth &gt;::operator/=</definition>
        <argsstring>(const multiarray&lt; R, depth &gt; &amp;rhs)</argsstring>
        <name>operator/=</name>
        <qualifiedname>multidimensional::multiarray::operator/=</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">R</ref>, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="460" column="20" bodyfile="multidimensional/multiarray.hpp" bodystart="460" bodyend="466"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1a406069311c6004e5e303408959e3b7bc" compoundref="df/da4/multiarray_8hpp" startline="225" endline="227">multidimensional::multiarray&lt; T, depth &gt;::is_same_length</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a53a6c38cecb992f7e135af4901c24f60" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">typename</ref> Q</type>
          </param>
          <param>
            <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">typename</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">R</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
        <definition>multiarray&lt; T, depth &gt; &amp; multidimensional::multiarray&lt; T, depth &gt;::scalar_map_assign</definition>
        <argsstring>(Q op, const R &amp;rhs) noexcept(noexcept(op(T(), R())))</argsstring>
        <name>scalar_map_assign</name>
        <qualifiedname>multidimensional::multiarray::scalar_map_assign</qualifiedname>
        <param>
          <type>Q</type>
          <declname>op</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">R</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>scalar arithmetic assignment </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="470" column="20" bodyfile="multidimensional/multiarray.hpp" bodystart="470" bodyend="477"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a61173992d03a23605d856652fdc8ff0e" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">typename</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">R</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
        <definition>multiarray&lt; T, depth &gt; &amp; multidimensional::multiarray&lt; T, depth &gt;::operator+=</definition>
        <argsstring>(const R &amp;rhs) noexcept(noexcept(T()+R()))</argsstring>
        <name>operator+=</name>
        <qualifiedname>multidimensional::multiarray::operator+=</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">R</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="480" column="20" bodyfile="multidimensional/multiarray.hpp" bodystart="480" bodyend="484"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a87c7c891d9630ec743f0bcd75e04a992" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">typename</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">R</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
        <definition>multiarray&lt; T, depth &gt; &amp; multidimensional::multiarray&lt; T, depth &gt;::operator-=</definition>
        <argsstring>(const R &amp;rhs) noexcept(noexcept(T() - R()))</argsstring>
        <name>operator-=</name>
        <qualifiedname>multidimensional::multiarray::operator-=</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">R</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="487" column="20" bodyfile="multidimensional/multiarray.hpp" bodystart="487" bodyend="492"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1acdd0f662ba00e2fd7d3020fceb4c7fe5" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">typename</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">R</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
        <definition>multiarray&lt; T, depth &gt; &amp; multidimensional::multiarray&lt; T, depth &gt;::operator*=</definition>
        <argsstring>(const R &amp;rhs) noexcept(noexcept(T() *R()))</argsstring>
        <name>operator*=</name>
        <qualifiedname>multidimensional::multiarray::operator*=</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">R</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="495" column="20" bodyfile="multidimensional/multiarray.hpp" bodystart="495" bodyend="499"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a685896d9e3ac6642788b6aee0d54681c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">typename</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">R</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt; &amp;</type>
        <definition>multiarray&lt; T, depth &gt; &amp; multidimensional::multiarray&lt; T, depth &gt;::operator/=</definition>
        <argsstring>(const R &amp;rhs) noexcept(noexcept(T() - R()))</argsstring>
        <name>operator/=</name>
        <qualifiedname>multidimensional::multiarray::operator/=</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">R</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="502" column="20" bodyfile="multidimensional/multiarray.hpp" bodystart="502" bodyend="506"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a14fb656eb94788501942670d6324a5e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray" kindref="compound">multiarray</ref>&lt; T, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">depth</ref> &gt;</type>
        <definition>multiarray&lt; T, depth &gt; multidimensional::multiarray&lt; T, depth &gt;::abs</definition>
        <argsstring>() const</argsstring>
        <name>abs</name>
        <qualifiedname>multidimensional::multiarray::abs</qualifiedname>
        <briefdescription>
<para>other function related to arithmetic </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="510" column="20" bodyfile="multidimensional/multiarray.hpp" bodystart="510" bodyend="512"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/da5/namespacemultidimensional_1ac83df864661f20308eef12ec98d215cf" compoundref="df/da4/multiarray_8hpp" startline="702" endline="709">multidimensional::transform</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1ab6f6e91f1f50a8256056c7f45e998ede" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T multidimensional::multiarray&lt; T, depth &gt;::max</definition>
        <argsstring>() const</argsstring>
        <name>max</name>
        <qualifiedname>multidimensional::multiarray::max</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="514" column="11" bodyfile="multidimensional/multiarray.hpp" bodystart="514" bodyend="517"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1ac113a3e6fee37465ffe1ef6040a19bac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T multidimensional::multiarray&lt; T, depth &gt;::min</definition>
        <argsstring>() const</argsstring>
        <name>min</name>
        <qualifiedname>multidimensional::multiarray::min</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="519" column="11" bodyfile="multidimensional/multiarray.hpp" bodystart="519" bodyend="522"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a6ffc643bd6786cfd0a006fbaf7ac6c85" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T multidimensional::multiarray&lt; T, depth &gt;::maxabs</definition>
        <argsstring>() const</argsstring>
        <name>maxabs</name>
        <qualifiedname>multidimensional::multiarray::maxabs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="524" column="11" bodyfile="multidimensional/multiarray.hpp" bodystart="524" bodyend="527"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1a72736a3525d18e148ca409ec30ce62eb" compoundref="df/da4/multiarray_8hpp" startline="144" endline="147">multidimensional::multiarray&lt; T, depth &gt;::begin</references>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1aad7e086f7c50fbd63b80dc62711581ba" compoundref="df/da4/multiarray_8hpp" startline="148" endline="151">multidimensional::multiarray&lt; T, depth &gt;::end</references>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1a3b3a6cae9bb68e27514e2a8f972573aa" compoundref="df/da4/multiarray_8hpp" startline="534" endline="536">multidimensional::multiarray&lt; T, depth &gt;::max_norm</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1aa6b5df14222e419e4c0387c004f4f4c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T multidimensional::multiarray&lt; T, depth &gt;::minabs</definition>
        <argsstring>() const</argsstring>
        <name>minabs</name>
        <qualifiedname>multidimensional::multiarray::minabs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="529" column="11" bodyfile="multidimensional/multiarray.hpp" bodystart="529" bodyend="532"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1a72736a3525d18e148ca409ec30ce62eb" compoundref="df/da4/multiarray_8hpp" startline="144" endline="147">multidimensional::multiarray&lt; T, depth &gt;::begin</references>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1aad7e086f7c50fbd63b80dc62711581ba" compoundref="df/da4/multiarray_8hpp" startline="148" endline="151">multidimensional::multiarray&lt; T, depth &gt;::end</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a3b3a6cae9bb68e27514e2a8f972573aa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double multidimensional::multiarray&lt; T, depth &gt;::max_norm</definition>
        <argsstring>() const</argsstring>
        <name>max_norm</name>
        <qualifiedname>multidimensional::multiarray::max_norm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="534" column="16" bodyfile="multidimensional/multiarray.hpp" bodystart="534" bodyend="536"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1a6ffc643bd6786cfd0a006fbaf7ac6c85" compoundref="df/da4/multiarray_8hpp" startline="524" endline="527">multidimensional::multiarray&lt; T, depth &gt;::maxabs</references>
        <referencedby refid="d3/dd8/classDataContainer_1a1f8a7be178c433f68e29315810ecdc19" compoundref="da/dbc/data__container_8hpp" startline="205" endline="211">DataContainer&lt; Q, rank, numberFrequencyDims, pos_first_freqpoint, frequencyGrid_type &gt;::analyze_tails</referencedby>
        <referencedby refid="d3/dd8/classDataContainer_1ae9bef99a8fc3ab5df6e95c5329fb6fcc" compoundref="da/dbc/data__container_8hpp" startline="292" endline="334">DataContainer&lt; Q, rank, numberFrequencyDims, pos_first_freqpoint, frequencyGrid_type &gt;::get_curvature_max</referencedby>
        <referencedby refid="d3/dd8/classDataContainer_1a816b1d8369863639a1406f6936306609" compoundref="da/dbc/data__container_8hpp" startline="265" endline="291">DataContainer&lt; Q, rank, numberFrequencyDims, pos_first_freqpoint, frequencyGrid_type &gt;::get_deriv_max</referencedby>
        <referencedby refid="d3/dd8/classDataContainer_1a46399d6d77d6ee47d3ed7e45d872da03" compoundref="da/dbc/data__container_8hpp" startline="395" endline="458">DataContainer&lt; Q, rank, numberFrequencyDims, pos_first_freqpoint, frequencyGrid_type &gt;::shrink_freq_box</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a85f7f82bfe38a4ae9ec84182c6d16266" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>p</declname>
            <defname>p</defname>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double multidimensional::multiarray&lt; T, depth &gt;::lpNorm</definition>
        <argsstring>() const</argsstring>
        <name>lpNorm</name>
        <qualifiedname>multidimensional::multiarray::lpNorm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="538" column="27" bodyfile="multidimensional/multiarray.hpp" bodystart="538" bodyend="540"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1ab03dc64bc596a740a0221fdd6d339691" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/db9/classbool" kindref="compound">bool</ref></type>
        <definition>bool multidimensional::multiarray&lt; T, depth &gt;::isfinite</definition>
        <argsstring>() const</argsstring>
        <name>isfinite</name>
        <qualifiedname>multidimensional::multiarray::isfinite</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="543" column="14" bodyfile="multidimensional/multiarray.hpp" bodystart="543" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1ad571a58ef74d80ea42ab143c7735b5fb" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d7/d3f/classmultidimensional_1_1multiarray_1ab0aa529ad59f5ea36eae86c4f9dcde29" kindref="member">size_type</ref></type>
        <definition>size_type multidimensional::multiarray&lt; T, depth &gt;::size</definition>
        <argsstring>() const noexcept</argsstring>
        <name>size</name>
        <qualifiedname>multidimensional::multiarray::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="558" column="19" bodyfile="multidimensional/multiarray.hpp" bodystart="558" bodyend="561"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" compoundref="df/da4/multiarray_8hpp" startline="75">multidimensional::multiarray&lt; T, depth &gt;::elements</references>
        <referencedby refid="d5/d5f/classdataContainerBase_1af8da5de4958e6394f3700dddba32956b" compoundref="da/dbc/data__container_8hpp" startline="63" endline="66">dataContainerBase&lt; Q, rank &gt;::acc</referencedby>
        <referencedby refid="d5/d5f/classdataContainerBase_1a94ed8cb0315262a605d076a7dd8a5782" compoundref="da/dbc/data__container_8hpp" startline="143" endline="146">dataContainerBase&lt; Q, rank &gt;::add_vec</referencedby>
        <referencedby refid="d5/d5f/classdataContainerBase_1a554ee3f67bf16bd9438c9f056bcd58a2" compoundref="da/dbc/data__container_8hpp" startline="68" endline="71">dataContainerBase&lt; Q, rank &gt;::direct_set</referencedby>
        <referencedby refid="d5/d5f/classdataContainerBase_1ae76c4352d8dbe3fa86fc4394eb781334" compoundref="da/dbc/data__container_8hpp" startline="122" endline="125">dataContainerBase&lt; Q, rank &gt;::set_vec</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1aca0527dd01461a6b0e5979af8d399fc5" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">constexpr</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1adf01f1572984e9636a81839be5f3b6c6" kindref="member">dimensions_type</ref> &amp;</type>
        <definition>constexpr const dimensions_type &amp; multidimensional::multiarray&lt; T, depth &gt;::length</definition>
        <argsstring>() const noexcept</argsstring>
        <name>length</name>
        <qualifiedname>multidimensional::multiarray::length</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="563" column="41" bodyfile="multidimensional/multiarray.hpp" bodystart="563" bodyend="566"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1affae78ea84a5f1c5fac842f4129c8149" compoundref="df/da4/multiarray_8hpp" startline="56">multidimensional::multiarray&lt; T, depth &gt;::m_length</references>
        <referencedby refid="d5/d5f/classdataContainerBase_1a94ed8cb0315262a605d076a7dd8a5782" compoundref="da/dbc/data__container_8hpp" startline="143" endline="146">dataContainerBase&lt; Q, rank &gt;::add_vec</referencedby>
        <referencedby refid="d0/dc6/classmultidimensional_1_1BlockView_1ab8541a6759186032981a267f59e53adf" compoundref="dd/df3/ranged__view_8hpp" startline="54" endline="63">multidimensional::BlockView&lt; T, depth &gt;::BlockView</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1ad33f2cb2edb8133098b9e06731669f96" compoundref="df/da4/multiarray_8hpp" startline="385" endline="398">multidimensional::multiarray&lt; T, depth &gt;::elementwise_map_assign</referencedby>
        <referencedby refid="d7/d3f/classmultidimensional_1_1multiarray_1ad62ddf265ac9bcf7a13e24c98f36079b" compoundref="df/da4/multiarray_8hpp" startline="57" endline="64">multidimensional::multiarray&lt; T, depth &gt;::get_cumul_length</referencedby>
        <referencedby refid="d5/d5f/classdataContainerBase_1a0c77f9ef4693c731137691ff87c199aa" compoundref="da/dbc/data__container_8hpp" startline="111" endline="111">dataContainerBase&lt; Q, rank &gt;::get_dims</referencedby>
        <referencedby refid="de/dbb/math__utils_8hpp_1a736d3a5d01a734a6830c58d51e04b785" compoundref="de/dbb/math__utils_8hpp" startline="775" endline="788">get_slice</referencedby>
        <referencedby refid="de/dbb/math__utils_8hpp_1a562a53ddc7418efed23325265f4a8e71" compoundref="de/dbb/math__utils_8hpp" startline="985" endline="988">maxabs</referencedby>
        <referencedby refid="de/dbb/math__utils_8hpp_1a7387e2c9cc91f8ff52731338f1fd21f2" compoundref="de/dbb/math__utils_8hpp" startline="793" endline="822">partial_deriv</referencedby>
        <referencedby refid="d5/d5f/classdataContainerBase_1ae76c4352d8dbe3fa86fc4394eb781334" compoundref="da/dbc/data__container_8hpp" startline="122" endline="125">dataContainerBase&lt; Q, rank &gt;::set_vec</referencedby>
        <referencedby refid="d3/d22/r__vertex_8hpp_1a2337339bdea1a060b1205e7bcba3bb20" compoundref="d5/de4/hdf5__routines_8hpp" startline="425" endline="440">write_to_hdf</referencedby>
        <referencedby refid="d5/de4/hdf5__routines_8hpp_1a5140465955e9f914b13900b9a7382cef" compoundref="d5/de4/hdf5__routines_8hpp" startline="469" endline="473">write_to_hdf_LambdaLayer</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1aedeebccacda0e69cd93b169b2d28a0ff" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">constexpr</ref> <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1adf01f1572984e9636a81839be5f3b6c6" kindref="member">dimensions_type</ref> &amp;</type>
        <definition>constexpr const dimensions_type &amp; multidimensional::multiarray&lt; T, depth &gt;::length_cumul</definition>
        <argsstring>() const noexcept</argsstring>
        <name>length_cumul</name>
        <qualifiedname>multidimensional::multiarray::length_cumul</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="568" column="41" bodyfile="multidimensional/multiarray.hpp" bodystart="568" bodyend="571"/>
        <references refid="d7/d3f/classmultidimensional_1_1multiarray_1afd141265dea8d95a0203887fa16b6989" compoundref="df/da4/multiarray_8hpp" startline="65">multidimensional::multiarray&lt; T, depth &gt;::m_length_cumulative</references>
        <referencedby refid="de/dbb/math__utils_8hpp_1a736d3a5d01a734a6830c58d51e04b785" compoundref="de/dbb/math__utils_8hpp" startline="775" endline="788">get_slice</referencedby>
        <referencedby refid="de/dbb/math__utils_8hpp_1a7387e2c9cc91f8ff52731338f1fd21f2" compoundref="de/dbb/math__utils_8hpp" startline="793" endline="822">partial_deriv</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="d7/d3f/classmultidimensional_1_1multiarray_1a3fce5273ba962af88130dd33ff225631" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">constexpr</ref> <ref refid="d7/d3f/classmultidimensional_1_1multiarray_1ab0aa529ad59f5ea36eae86c4f9dcde29" kindref="member">size_type</ref></type>
        <definition>static constexpr size_type multidimensional::multiarray&lt; T, depth &gt;::get_depth</definition>
        <argsstring>() noexcept</argsstring>
        <name>get_depth</name>
        <qualifiedname>multidimensional::multiarray::get_depth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multidimensional/multiarray.hpp" line="573" column="36" bodyfile="multidimensional/multiarray.hpp" bodystart="573" bodyend="576"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="8">
        <label>multidimensional::multiarray&lt; Q, 2 &gt;</label>
        <link refid="d7/d3f/classmultidimensional_1_1multiarray"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; Q, 2 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>multidimensional::multiarray&lt; Q, rank &gt;</label>
        <link refid="d7/d3f/classmultidimensional_1_1multiarray"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; Q, rank &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>multidimensional::multiarray&lt; comp, rank &gt;</label>
        <link refid="d7/d3f/classmultidimensional_1_1multiarray"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; comp, rank &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>multidimensional::multiarray&lt; int, 2 &gt;</label>
        <link refid="d7/d3f/classmultidimensional_1_1multiarray"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; int, 2 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>multidimensional::multiarray&lt; int, 3 &gt;</label>
        <link refid="d7/d3f/classmultidimensional_1_1multiarray"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; int, 3 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>multidimensional::multiarray&lt; state_datatype, 2 &gt;</label>
        <link refid="d7/d3f/classmultidimensional_1_1multiarray"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; state_datatype, 2 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>multidimensional::multiarray&lt; state_datatype, rank &gt;</label>
        <link refid="d7/d3f/classmultidimensional_1_1multiarray"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; state_datatype, rank &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>multidimensional::multiarray&lt; T, depth &gt;</label>
        <link refid="d7/d3f/classmultidimensional_1_1multiarray"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>Array&lt; T, Eigen::Dynamic, 1 &gt;</label>
      </node>
      <node id="5">
        <label>T</label>
      </node>
      <node id="2">
        <label>std::array&lt; size_type, depth &gt;</label>
        <childnode refid="3" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; size_type, depth &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>multidimensional::multiarray&lt; T, depth &gt;</label>
        <link refid="d7/d3f/classmultidimensional_1_1multiarray"/>
        <childnode refid="2" relation="usage">
          <edgelabel>-m_length</edgelabel>
          <edgelabel>-m_length_cumulative</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>size_type</label>
      </node>
      <node id="4">
        <label>std::array&lt; T &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="multidimensional/multiarray.hpp" line="40" column="5" bodyfile="multidimensional/multiarray.hpp" bodystart="41" bodyend="607"/>
    <listofallmembers>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a7798825b221fe13945fb7f06a523c757" prot="private" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>_flat_size</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a14fb656eb94788501942670d6324a5e7" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>abs</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1ae632dc0f9694fb2d585f53d007d97448" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>at</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a951e50bfec426e156ff016409b837e28" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>at</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1aa97a456adb759b57b194617dd8a7d0ee" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>at</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1ac2bf92d856e69dd8d14c57a51c9a7013" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>at</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a5757d174bade77621dff6d192e8177de" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>at_vectorized</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a0141c6e09ccc03e02202610597a96a83" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>at_vectorized</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a1a0f7133f9225325c79118a154b6e4f6" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>at_vectorized</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a72736a3525d18e148ca409ec30ce62eb" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>begin</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1ae8a6f4b3920580ae116d35f3490e709f" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>begin</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1accf8399bc31caf7060fbc8469d1b5a5c" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>buffer_type</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a75f12a79c54cb1454f06261fb9baa185" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>cbegin</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a11f84bb11d238d70d99922cf003cf420" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>cend</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1afdbae946939f1379a4e55e7e8a0934ce" prot="private" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>check_bounds</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1acd08f67a199b8f422c2b179d11e22d4e" prot="private" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>check_bounds_end</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a7696176134ece4eefab479ba75b1b0f8" prot="private" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>check_size</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1aff7ef46a3572a152eb5921e02cf72b3a" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>const_iterator</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a9a3b366566ca10d508e9958fd5e1439c" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>const_pointer</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1ae1b4ff18a119c8317f678575a6f66971" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>const_reference</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1ab0eb44d006398d29be417ed6b34ecb10" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>data</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a52ab95f511cdd77c599ff3431dc60790" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>data</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1ab6753f8d5c1c671ec86437b096f4fe3e" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>difference_type</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1adf01f1572984e9636a81839be5f3b6c6" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>dimensions_type</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a72843a896df64733c74232efdd5f2af6" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>eigen_segment</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1adae0c97b216bcb79f4a3e4ddf6c55796" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>eigen_segment</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1af85d9a7c0b023aa5d911ff3fa9a3afd6" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>elements</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1ad33f2cb2edb8133098b9e06731669f96" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>elementwise_map_assign</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1aad7e086f7c50fbd63b80dc62711581ba" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>end</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1ad088042c4205750f6fb0760b5973d982" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>end</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1ae95e38ba06e10e921ed2fe0101bf699f" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>flat_at</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a7218e87b098538b3fc8fac776ca81dc0" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>flat_at</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a58de83e8e629b674274b88d588dfa6d3" prot="private" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>flat_index</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1ad62ddf265ac9bcf7a13e24c98f36079b" prot="private" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>get_cumul_length</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a3fce5273ba962af88130dd33ff225631" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>get_depth</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a2918a5db5f8a11863b38993cd06bfc5a" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>get_elements</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1adc2341497fc392f72af8c3d3190a7b13" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>get_flatindex_ini</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a304baf744947fa9042da5e4bb9cf70b9" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>get_values</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1acecc1afaa1d742fdd9eb9039182a82e2" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>index_type</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a406069311c6004e5e303408959e3b7bc" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>is_same_length</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1ab03dc64bc596a740a0221fdd6d339691" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>isfinite</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a00f4733e52bf048b2d53b9140458515d" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>iterator</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1aca0527dd01461a6b0e5979af8d399fc5" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>length</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1aedeebccacda0e69cd93b169b2d28a0ff" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>length_cumul</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a85f7f82bfe38a4ae9ec84182c6d16266" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>lpNorm</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1affae78ea84a5f1c5fac842f4129c8149" prot="private" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>m_length</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1afd141265dea8d95a0203887fa16b6989" prot="private" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>m_length_cumulative</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1ab6f6e91f1f50a8256056c7f45e998ede" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>max</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a3b3a6cae9bb68e27514e2a8f972573aa" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>max_norm</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a6ffc643bd6786cfd0a006fbaf7ac6c85" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>maxabs</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1ac113a3e6fee37465ffe1ef6040a19bac" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>min</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1aa6b5df14222e419e4c0387c004f4f4c1" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>minabs</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a8e52f1799408bbe05af7e7e3cfbc122f" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>multiarray</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a3bb4c508ee784616ebd9ca33addcb7b4" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>multiarray</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a2a1ad17cc96910a23c00354dfa0c36bb" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>multiarray</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a4bcdeb88f81900d2f5f5242aed9162cc" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>multiarray</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1add37e1c41b1dde04fc4f1b3e316db5cf" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>multiarray</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a4ef0ebde4d24ec7fbb649e19dd965aac" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>multiarray</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a5678345461584fa3e499d54707bfce16" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>multiarray</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1aece079fe4fba332aa9b16511e94735c3" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>operator()</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1af391bb83902677481ae0045c5a66db36" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>operator()</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a94db3f33eeef571b97f8256cacfd9163" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>operator*=</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1af80f2fcb76848f68041ea648afb40c85" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>operator*=</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1acdd0f662ba00e2fd7d3020fceb4c7fe5" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>operator*=</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a0d88e72e51597d654b6dd94e7c93caed" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>operator+=</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1ae4eff17b0716aeb165f15816cef47d8f" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>operator+=</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a61173992d03a23605d856652fdc8ff0e" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>operator+=</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a0425916e1a84ac717f6b3763de12ea31" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>operator-=</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a0c6bb12e93956a4ffe51417a862393c5" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>operator-=</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a87c7c891d9630ec743f0bcd75e04a992" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>operator-=</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a9a8fd2e161ea650db0f3ba84632388ec" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>operator/=</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1ab3a274497f4dae5a938b4d67ff590725" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>operator/=</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a685896d9e3ac6642788b6aee0d54681c" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>operator/=</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1af2848c0df586f79cfd529319c20b58b8" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>operator=</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1af9a6cce15275148338c56c0252617b55" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>operator=</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a6e80c27e0bac22f9a507415954e05bef" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>operator==</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1aa2b57a9ec50a1547ec10ddeb2c031ef0" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>operator[]</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a4f6e9bb8dcef8078e598d1ab9236c26a" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>operator[]</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1abf0b43ac725fa45bac73e0d2a9bd09f5" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>pointer</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a45e232891b85cf7c0f42c368d2277e54" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>range</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a6a8013212a77da01ac9b4f5d94e46473" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>range</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1ab3ce8855f4cb0c137638f61ec69e513f" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>reference</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a53a6c38cecb992f7e135af4901c24f60" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>scalar_map_assign</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a25ad0588248c1de785fd07d1e8327771" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>set_vectorized</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1ad571a58ef74d80ea42ab143c7735b5fb" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>size</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1ab0aa529ad59f5ea36eae86c4f9dcde29" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>size_type</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1ae830324fe424eedf57cfe6c2cae0d47d" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>swap</name></member>
      <member refid="d7/d3f/classmultidimensional_1_1multiarray_1a15f6d396714c3619069900b3d846550c" prot="public" virt="non-virtual"><scope>multidimensional::multiarray</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
