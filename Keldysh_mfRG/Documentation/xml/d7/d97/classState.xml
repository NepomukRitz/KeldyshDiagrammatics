<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="d7/d97/classState" kind="class" language="C++" prot="public">
    <compoundname>State</compoundname>
    <includes refid="da/d3b/state_8hpp" local="no">state.hpp</includes>
    <templateparamlist>
      <param>
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">typename</ref> Q</type>
      </param>
      <param>
        <type><ref refid="d9/db9/classbool" kindref="compound">bool</ref></type>
        <declname>differentiated</declname>
        <defname>differentiated</defname>
        <defval><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">false</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="d7/d97/classState_1a9e862ceeb13ad0e25034e81e87459265" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double State&lt; Q, differentiated &gt;::Lambda</definition>
        <argsstring></argsstring>
        <name>Lambda</name>
        <qualifiedname>State::Lambda</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="28" column="12" bodyfile="correlation_functions/state.hpp" bodystart="28" bodyend="-1"/>
        <referencedby refid="d7/d97/classState_1a976ebaeffdb650be4c8a5b6f4c8479bd" compoundref="da/d3b/state_8hpp" startline="150" endline="172">State&lt; Q, differentiated &gt;::initialize</referencedby>
        <referencedby refid="d7/dbe/structmfRG__record_1a93b8fefd8136bbebcfe993f76d281ff7" compoundref="d8/dea/right__hand__sides_8hpp" startline="76" endline="128">mfRG_record&lt; Q &gt;::save_states</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/d97/classState_1ac71a138762ca873d09d4aa8de65791fd" prot="public" static="no" mutable="no">
        <type><ref refid="da/da0/structfRG__config" kindref="compound">fRG_config</ref></type>
        <definition>fRG_config State&lt; Q, differentiated &gt;::config</definition>
        <argsstring></argsstring>
        <name>config</name>
        <qualifiedname>State::config</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="29" column="16" bodyfile="correlation_functions/state.hpp" bodystart="29" bodyend="-1"/>
        <referencedby refid="d7/d97/classState_1a976ebaeffdb650be4c8a5b6f4c8479bd" compoundref="da/d3b/state_8hpp" startline="150" endline="172">State&lt; Q, differentiated &gt;::initialize</referencedby>
        <referencedby refid="d7/dbe/structmfRG__record_1a93b8fefd8136bbebcfe993f76d281ff7" compoundref="d8/dea/right__hand__sides_8hpp" startline="76" endline="128">mfRG_record&lt; Q &gt;::save_states</referencedby>
        <referencedby refid="d7/d97/classState_1a62a12cb0350fa1a06f9b68d257bbfa8c" compoundref="da/d3b/state_8hpp" startline="180" endline="184">State&lt; Q, differentiated &gt;::update_grid</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/d97/classState_1aa4c9989ea29c6f441ed84ce50334013d" prot="public" static="no" mutable="no">
        <type><ref refid="d1/d2d/vertex_8hpp_1a6fe6fa5dc5814b2f7b53f9d7af277c62" kindref="member">Vertex</ref>&lt; Q, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">differentiated</ref> &gt;</type>
        <definition>Vertex&lt;Q,differentiated&gt; State&lt; Q, differentiated &gt;::vertex</definition>
        <argsstring></argsstring>
        <name>vertex</name>
        <qualifiedname>State::vertex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="30" column="12" bodyfile="correlation_functions/state.hpp" bodystart="30" bodyend="-1"/>
        <referencedby refid="d7/d97/classState_1a504a0b837e47e37e3cc638555a3fca63" compoundref="da/d3b/state_8hpp" startline="197" endline="202">State&lt; Q, differentiated &gt;::analyze_tails</referencedby>
        <referencedby refid="d7/d97/classState_1aff40007121488153c21f0432e1cadf36" compoundref="da/d3b/state_8hpp" startline="192" endline="195">State&lt; Q, differentiated &gt;::check_resolution</referencedby>
        <referencedby refid="d7/d97/classState_1a976ebaeffdb650be4c8a5b6f4c8479bd" compoundref="da/d3b/state_8hpp" startline="150" endline="172">State&lt; Q, differentiated &gt;::initialize</referencedby>
        <referencedby refid="d7/d97/classState_1ac507d44949f78a583a7bed16fa9fcde9" compoundref="da/d3b/state_8hpp" startline="205" endline="210">State&lt; Q, differentiated &gt;::norm</referencedby>
        <referencedby refid="d8/dea/right__hand__sides_8hpp_1a856b8e93c4a2635c6c6edb5869837fb9" compoundref="d8/dea/right__hand__sides_8hpp" startline="167" endline="549">rhs_n_loop_flow</referencedby>
        <referencedby refid="d7/d97/classState_1a6d532d97650453f6f56bdc581a346b36" compoundref="da/d3b/state_8hpp" startline="54" endline="55">State&lt; Q, differentiated &gt;::State</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/d97/classState_1ac676b4cfa39fb1439b345466ed92113f" prot="public" static="no" mutable="no">
        <type><ref refid="d5/df6/classSelfEnergy" kindref="compound">SelfEnergy</ref>&lt; Q &gt;</type>
        <definition>SelfEnergy&lt;Q&gt; State&lt; Q, differentiated &gt;::selfenergy</definition>
        <argsstring></argsstring>
        <name>selfenergy</name>
        <qualifiedname>State::selfenergy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="31" column="16" bodyfile="correlation_functions/state.hpp" bodystart="31" bodyend="-1"/>
        <referencedby refid="d7/d97/classState_1af8d534b130171535c9fbfb0cdb2ea0e5" compoundref="da/d3b/state_8hpp" startline="137" endline="144">State&lt; Q, differentiated &gt;::abs</referencedby>
        <referencedby refid="d7/d97/classState_1a504a0b837e47e37e3cc638555a3fca63" compoundref="da/d3b/state_8hpp" startline="197" endline="202">State&lt; Q, differentiated &gt;::analyze_tails</referencedby>
        <referencedby refid="d7/d97/classState_1aff40007121488153c21f0432e1cadf36" compoundref="da/d3b/state_8hpp" startline="192" endline="195">State&lt; Q, differentiated &gt;::check_resolution</referencedby>
        <referencedby refid="d1/d75/causality__FDT__checks_8hpp_1a2ad9fde94cddf669f941f8405a461ae2" compoundref="d1/d75/causality__FDT__checks_8hpp" startline="920" endline="936">compare_with_FDTs</referencedby>
        <referencedby refid="d7/d97/classState_1ac507d44949f78a583a7bed16fa9fcde9" compoundref="da/d3b/state_8hpp" startline="205" endline="210">State&lt; Q, differentiated &gt;::norm</referencedby>
        <referencedby refid="d7/dbe/structmfRG__record_1a93b8fefd8136bbebcfe993f76d281ff7" compoundref="d8/dea/right__hand__sides_8hpp" startline="76" endline="128">mfRG_record&lt; Q &gt;::save_states</referencedby>
        <referencedby refid="d7/d97/classState_1a62a12cb0350fa1a06f9b68d257bbfa8c" compoundref="da/d3b/state_8hpp" startline="180" endline="184">State&lt; Q, differentiated &gt;::update_grid</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/d97/classState_1ab065bd3e423a153db72513997aa374eb" prot="public" static="no" mutable="no">
        <type><ref refid="d9/db9/classbool" kindref="compound">bool</ref></type>
        <definition>bool State&lt; Q, differentiated &gt;::initialized</definition>
        <argsstring></argsstring>
        <name>initialized</name>
        <qualifiedname>State::initialized</qualifiedname>
        <initializer>= <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">false</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="32" column="10" bodyfile="correlation_functions/state.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="d7/d97/classState_1a3120a9f1788e0241307de564d616b8ef" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d97/classState" kindref="compound">State</ref>&lt; <ref refid="d7/d59/data__structures_8hpp_1aa06c6e6918506d71503662b864204749" kindref="member">state_datatype</ref> &gt;</type>
        <definition>State&lt; state_datatype &gt; n_loop_flow</definition>
        <argsstring>(const std::string outputFileName, bool save_intermediate_results)</argsstring>
        <name>n_loop_flow</name>
        <qualifiedname>State::n_loop_flow</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> std::string</type>
          <declname>outputFileName</declname>
        </param>
        <param>
          <type><ref refid="d9/db9/classbool" kindref="compound">bool</ref></type>
          <declname>save_intermediate_results</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="24" column="18"/>
      </memberdef>
      <memberdef kind="friend" id="d7/d97/classState_1a1c726a8cf958e5253a4a871b1ddea67c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">typename</ref> T</type>
          </param>
        </templateparamlist>
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">void</ref></type>
        <definition>void test_PT_state</definition>
        <argsstring>(std::string outputFileName, double Lambda, bool diff)</argsstring>
        <name>test_PT_state</name>
        <qualifiedname>State::test_PT_state</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>outputFileName</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Lambda</declname>
        </param>
        <param>
          <type><ref refid="d9/db9/classbool" kindref="compound">bool</ref></type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="25" column="29"/>
      </memberdef>
      <memberdef kind="friend" id="d7/d97/classState_1aa571f1fa98d97b8886fa827165578ae9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/d97/classState" kindref="compound">State</ref>&lt; Q, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">differentiated</ref> &gt;</type>
        <definition>State&lt; Q, differentiated &gt; operator+</definition>
        <argsstring>(State&lt; Q, differentiated &gt; lhs, const State&lt; Q, differentiated &gt; &amp;rhs)</argsstring>
        <name>operator+</name>
        <qualifiedname>State::operator+</qualifiedname>
        <param>
          <type><ref refid="d7/d97/classState" kindref="compound">State</ref>&lt; Q, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">differentiated</ref> &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d97/classState" kindref="compound">State</ref>&lt; Q, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">differentiated</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="83" column="18" bodyfile="correlation_functions/state.hpp" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="friend" id="d7/d97/classState_1a16248a96ef07cce9233033a78c99ca14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/d97/classState" kindref="compound">State</ref>&lt; Q, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">differentiated</ref> &gt;</type>
        <definition>State&lt; Q, differentiated &gt; operator+</definition>
        <argsstring>(State&lt; Q, differentiated &gt; lhs, const double rhs)</argsstring>
        <name>operator+</name>
        <qualifiedname>State::operator+</qualifiedname>
        <param>
          <type><ref refid="d7/d97/classState" kindref="compound">State</ref>&lt; Q, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">differentiated</ref> &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> double</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="92" column="18" bodyfile="correlation_functions/state.hpp" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="friend" id="d7/d97/classState_1a771d4f846e96da303b18575fdab3f92f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/d97/classState" kindref="compound">State</ref>&lt; Q, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">differentiated</ref> &gt;</type>
        <definition>State&lt; Q, differentiated &gt; operator+</definition>
        <argsstring>(const double &amp;rhs, State&lt; Q, differentiated &gt; lhs)</argsstring>
        <name>operator+</name>
        <qualifiedname>State::operator+</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> double &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type><ref refid="d7/d97/classState" kindref="compound">State</ref>&lt; Q, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">differentiated</ref> &gt;</type>
          <declname>lhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="96" column="18" bodyfile="correlation_functions/state.hpp" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="friend" id="d7/d97/classState_1ac2f8d0d41d43adbfd784e7679202aa7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/d97/classState" kindref="compound">State</ref>&lt; Q, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">differentiated</ref> &gt;</type>
        <definition>State&lt; Q, differentiated &gt; operator*</definition>
        <argsstring>(State&lt; Q, differentiated &gt; lhs, const double &amp;rhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>State::operator*</qualifiedname>
        <param>
          <type><ref refid="d7/d97/classState" kindref="compound">State</ref>&lt; Q, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">differentiated</ref> &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> double &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="105" column="18" bodyfile="correlation_functions/state.hpp" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="friend" id="d7/d97/classState_1a5f6e5e422424afb07f5971624afce984" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/d97/classState" kindref="compound">State</ref>&lt; Q, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">differentiated</ref> &gt;</type>
        <definition>State&lt; Q, differentiated &gt; operator*</definition>
        <argsstring>(const double &amp;rhs, State&lt; Q, differentiated &gt; lhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>State::operator*</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> double &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type><ref refid="d7/d97/classState" kindref="compound">State</ref>&lt; Q, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">differentiated</ref> &gt;</type>
          <declname>lhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="109" column="18" bodyfile="correlation_functions/state.hpp" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="friend" id="d7/d97/classState_1afb8c6f45132d5ace493863f6efb5e0d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/d97/classState" kindref="compound">State</ref>&lt; Q, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">differentiated</ref> &gt;</type>
        <definition>State&lt; Q, differentiated &gt; operator-</definition>
        <argsstring>(State&lt; Q, differentiated &gt; lhs, const State&lt; Q, differentiated &gt; &amp;rhs)</argsstring>
        <name>operator-</name>
        <qualifiedname>State::operator-</qualifiedname>
        <param>
          <type><ref refid="d7/d97/classState" kindref="compound">State</ref>&lt; Q, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">differentiated</ref> &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d97/classState" kindref="compound">State</ref>&lt; Q, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">differentiated</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="118" column="18" bodyfile="correlation_functions/state.hpp" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="friend" id="d7/d97/classState_1ab532470735bf6ff419fa1c4c33f856ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/d97/classState" kindref="compound">State</ref>&lt; Q, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">differentiated</ref> &gt;</type>
        <definition>State&lt; Q, differentiated &gt; operator/</definition>
        <argsstring>(State&lt; Q, differentiated &gt; lhs, const State&lt; Q, differentiated &gt; &amp;rhs)</argsstring>
        <name>operator/</name>
        <qualifiedname>State::operator/</qualifiedname>
        <param>
          <type><ref refid="d7/d97/classState" kindref="compound">State</ref>&lt; Q, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">differentiated</ref> &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d97/classState" kindref="compound">State</ref>&lt; Q, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">differentiated</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="128" column="18" bodyfile="correlation_functions/state.hpp" bodystart="128" bodyend="131"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d7/d97/classState_1a30b26f704a36218a0bb45a53c02fed53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>State&lt; Q, differentiated &gt;::State</definition>
        <argsstring>()</argsstring>
        <name>State</name>
        <qualifiedname>State::State</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="34" column="5" bodyfile="correlation_functions/state.hpp" bodystart="34" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="d7/d97/classState_1a33aa01d752071307a5680a52d333b249" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>State&lt; Q, differentiated &gt;::State</definition>
        <argsstring>(double Lambda, const fRG_config &amp;config_in, bool initialize=false)</argsstring>
        <name>State</name>
        <qualifiedname>State::State</qualifiedname>
        <param>
          <type>double</type>
          <declname>Lambda</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="da/da0/structfRG__config" kindref="compound">fRG_config</ref> &amp;</type>
          <declname>config_in</declname>
        </param>
        <param>
          <type><ref refid="d9/db9/classbool" kindref="compound">bool</ref></type>
          <declname>initialize</declname>
          <defval><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">false</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor which generates a state with frequency grids corresponding to the given value of Lambda. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Lambda</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the regulator Λ. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_in</parametername>
</parameternamelist>
<parameterdescription>
<para>Set of parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initialize</parametername>
</parameternamelist>
<parameterdescription>
<para>Determines whether the state has to be initialized or not. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="45" column="14" bodyfile="correlation_functions/state.hpp" bodystart="45" bodyend="47"/>
        <references refid="d7/d97/classState_1a976ebaeffdb650be4c8a5b6f4c8479bd" compoundref="da/d3b/state_8hpp" startline="150" endline="172">State&lt; Q, differentiated &gt;::initialize</references>
      </memberdef>
      <memberdef kind="function" id="d7/d97/classState_1a6d532d97650453f6f56bdc581a346b36" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>State&lt; Q, differentiated &gt;::State</definition>
        <argsstring>(const State&lt; Q, false &gt; &amp;state_in, const double Lambda_in)</argsstring>
        <name>State</name>
        <qualifiedname>State::State</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d97/classState" kindref="compound">State</ref>&lt; Q, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">false</ref> &gt; &amp;</type>
          <declname>state_in</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> double</type>
          <declname>Lambda_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor which takes a <ref refid="d7/d97/classState" kindref="compound">State</ref> whose frequency grid will be copied. The <ref refid="d7/d97/classState" kindref="compound">State</ref> itself won&apos;t be copied! <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state_in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input <ref refid="d7/d97/classState" kindref="compound">State</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Lambda_in</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the regulator Λ. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="54" column="5" bodyfile="correlation_functions/state.hpp" bodystart="54" bodyend="55"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d97/classState_1aa4c9989ea29c6f441ed84ce50334013d" compoundref="da/d3b/state_8hpp" startline="30">State&lt; Q, differentiated &gt;::vertex</references>
      </memberdef>
      <memberdef kind="function" id="d7/d97/classState_1a036493f1c5bca2ea04c17372658f895e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>State&lt; Q, differentiated &gt;::State</definition>
        <argsstring>(const Vertex&lt; Q, differentiated &gt; &amp;vertex_in, const SelfEnergy&lt; Q &gt; &amp;selfenergy_in, const fRG_config &amp;config_in, const double Lambda_in)</argsstring>
        <name>State</name>
        <qualifiedname>State::State</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d1/d2d/vertex_8hpp_1a6fe6fa5dc5814b2f7b53f9d7af277c62" kindref="member">Vertex</ref>&lt; Q, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">differentiated</ref> &gt; &amp;</type>
          <declname>vertex_in</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d5/df6/classSelfEnergy" kindref="compound">SelfEnergy</ref>&lt; Q &gt; &amp;</type>
          <declname>selfenergy_in</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="da/da0/structfRG__config" kindref="compound">fRG_config</ref> &amp;</type>
          <declname>config_in</declname>
        </param>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> double</type>
          <declname>Lambda_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor which takes a single vertex and a single self-energy and puts them together into a new state. Needed for the parquet checks. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vertex_in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input vertex. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>selfenergy_in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input self-energy. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_in</parametername>
</parameternamelist>
<parameterdescription>
<para>Set of parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Lambda_in</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the regulator Λ. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="64" column="5" bodyfile="correlation_functions/state.hpp" bodystart="64" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="d7/d97/classState_1a976ebaeffdb650be4c8a5b6f4c8479bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">void</ref></type>
        <definition>void State&lt; Q, differentiated &gt;::initialize</definition>
        <argsstring>(bool checks=true)</argsstring>
        <name>initialize</name>
        <qualifiedname>State::initialize</qualifiedname>
        <param>
          <type><ref refid="d9/db9/classbool" kindref="compound">bool</ref></type>
          <declname>checks</declname>
          <defval><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">true</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initializes a state by setting the asymptotic value of the self-energy and the bare interaction appropriately. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>checks</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, a check of the Friedel sum rule of the Hartree term of the self-energy of the asymmetric SIAM is done. See the <ref refid="d2/d75/classHartree__Solver" kindref="compound">Hartree_Solver</ref> class. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="72" column="10" bodyfile="correlation_functions/state.hpp" bodystart="150" bodyend="172"/>
        <references refid="d7/d97/classState_1ac71a138762ca873d09d4aa8de65791fd" compoundref="da/d3b/state_8hpp" startline="29">State&lt; Q, differentiated &gt;::config</references>
        <references refid="d1/df8/master__parameters_8hpp_1a209c004ba9b216412cae0ca89758f1a9" compoundref="d1/df8/master__parameters_8hpp" startline="20">CONTOUR_BASIS</references>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="da/da0/structfRG__config_1a4a612c073aced64bd84466bbb875ff3f" compoundref="d7/d59/data__structures_8hpp" startline="653">fRG_config::epsilon</references>
        <references refid="d2/d4a/classGeneralVertex_1ab3e7f4b48064e39f60605037fa5c0a6a" compoundref="d1/d2d/vertex_8hpp" startline="1041" endline="1044">GeneralVertex&lt; Q, symmtype, differentiated &gt;::initialize</references>
        <references refid="d5/df6/classSelfEnergy_1a1f2c67cf8175e9bb23e8570d92661513" compoundref="d6/d2d/selfenergy_8hpp" startline="166" endline="170">SelfEnergy&lt; Q &gt;::initialize</references>
        <references refid="d1/df8/master__parameters_8hpp_1afab5195e3ffff420d211040e5672fcbe" compoundref="d1/df8/master__parameters_8hpp" startline="137">KELDYSH</references>
        <references refid="d7/d97/classState_1a9e862ceeb13ad0e25034e81e87459265" compoundref="da/d3b/state_8hpp" startline="28">State&lt; Q, differentiated &gt;::Lambda</references>
        <references refid="d1/df8/master__parameters_8hpp_1ac209459b6113297c093b5c50febc47ad" compoundref="d1/df8/master__parameters_8hpp" startline="148">PARTICLE_HOLE_SYMMETRY</references>
        <references refid="d3/d3c/frequency__parameters_8hpp_1abaf7a8bf0faac6945caeae137a97d0e6" compoundref="d3/d3c/frequency__parameters_8hpp" startline="17">shift_fgrids_woPHS</references>
        <references refid="da/da0/structfRG__config_1ad9afaf64e087c69bc4f16e49c132b592" compoundref="d7/d59/data__structures_8hpp" startline="650">fRG_config::U</references>
        <references refid="d7/d97/classState_1aa4c9989ea29c6f441ed84ce50334013d" compoundref="da/d3b/state_8hpp" startline="30">State&lt; Q, differentiated &gt;::vertex</references>
        <referencedby refid="d7/d97/classState_1a33aa01d752071307a5680a52d333b249" compoundref="da/d3b/state_8hpp" startline="45" endline="47">State&lt; Q, differentiated &gt;::State</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/d97/classState_1a62a12cb0350fa1a06f9b68d257bbfa8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">void</ref></type>
        <definition>void State&lt; Q, differentiated &gt;::update_grid</definition>
        <argsstring>(double Lambda)</argsstring>
        <name>update_grid</name>
        <qualifiedname>State::update_grid</qualifiedname>
        <param>
          <type>double</type>
          <declname>Lambda</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="73" column="10" bodyfile="correlation_functions/state.hpp" bodystart="180" bodyend="184"/>
        <references refid="d7/d97/classState_1ac71a138762ca873d09d4aa8de65791fd" compoundref="da/d3b/state_8hpp" startline="29">State&lt; Q, differentiated &gt;::config</references>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="da/da0/structfRG__config_1a4a612c073aced64bd84466bbb875ff3f" compoundref="d7/d59/data__structures_8hpp" startline="653">fRG_config::epsilon</references>
        <references refid="d7/d59/data__structures_8hpp_1a5b6ea4ce336353d3b6af014581c163a5" compoundref="d7/d59/data__structures_8hpp" startline="94" endline="94">myreal</references>
        <references refid="d7/d97/classState_1ac676b4cfa39fb1439b345466ed92113f" compoundref="da/d3b/state_8hpp" startline="31">State&lt; Q, differentiated &gt;::selfenergy</references>
        <references refid="d3/d3c/frequency__parameters_8hpp_1abaf7a8bf0faac6945caeae137a97d0e6" compoundref="d3/d3c/frequency__parameters_8hpp" startline="17">shift_fgrids_woPHS</references>
        <references refid="d5/df6/classSelfEnergy_1ad4649b0e28e209ef9b99333a9d469f2d" compoundref="d6/d2d/selfenergy_8hpp" startline="263" endline="266">SelfEnergy&lt; Q &gt;::update_grid</references>
        <references refid="d2/d4a/classGeneralVertex_1a388a400c48885ac12f13aaa3864c0b89" compoundref="d1/d2d/vertex_8hpp" startline="1024" endline="1027">GeneralVertex&lt; Q, symmtype, differentiated &gt;::update_grid</references>
      </memberdef>
      <memberdef kind="function" id="d7/d97/classState_1a85527803dbcedce85301a0831b1c473d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">void</ref></type>
        <definition>void State&lt; Q, differentiated &gt;::findBestFreqGrid</definition>
        <argsstring>(bool verbose)</argsstring>
        <name>findBestFreqGrid</name>
        <qualifiedname>State::findBestFreqGrid</qualifiedname>
        <param>
          <type><ref refid="d9/db9/classbool" kindref="compound">bool</ref></type>
          <declname>verbose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="74" column="10" bodyfile="correlation_functions/state.hpp" bodystart="187" bodyend="190"/>
        <references refid="d5/df6/classSelfEnergy_1a48b989837676cebb7043a4f14ae02203" compoundref="d6/d2d/selfenergy_8hpp" startline="327" endline="330">SelfEnergy&lt; Q &gt;::findBestFreqGrid</references>
        <references refid="d2/d4a/classGeneralVertex_1a914996279b86330de5331fb018eb3f60" compoundref="d1/d2d/vertex_8hpp" startline="857" endline="857">GeneralVertex&lt; Q, symmtype, differentiated &gt;::half1</references>
      </memberdef>
      <memberdef kind="function" id="d7/d97/classState_1aa5e0b0c02b861f0cd2555ef34a4584b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">void</ref></type>
        <definition>void State&lt; Q, differentiated &gt;::set_frequency_grid</definition>
        <argsstring>(const State&lt; Q, false &gt; &amp;state_in)</argsstring>
        <name>set_frequency_grid</name>
        <qualifiedname>State::set_frequency_grid</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d97/classState" kindref="compound">State</ref>&lt; Q, <ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">false</ref> &gt; &amp;</type>
          <declname>state_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="75" column="10" bodyfile="correlation_functions/state.hpp" bodystart="175" bodyend="178"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d2/d4a/classGeneralVertex_1a19ee736254b3fdbbdf13bb99af1bc2a4" compoundref="d1/d2d/vertex_8hpp" startline="1019" endline="1022">GeneralVertex&lt; Q, symmtype, differentiated &gt;::set_frequency_grid</references>
        <references refid="d5/df6/classSelfEnergy_1abf42878f8a0685afbd9b0f5813e7d9e8" compoundref="d6/d2d/selfenergy_8hpp" startline="259" endline="261">SelfEnergy&lt; Q &gt;::set_frequency_grid</references>
      </memberdef>
      <memberdef kind="function" id="d7/d97/classState_1aceb570905ab47b961c43d16ac62a0dda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">auto</ref></type>
        <definition>auto State&lt; Q, differentiated &gt;::operator+=</definition>
        <argsstring>(const State &amp;state) -&gt; State</argsstring>
        <name>operator+=</name>
        <qualifiedname>State::operator+=</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d97/classState" kindref="compound">State</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="78" column="10" bodyfile="correlation_functions/state.hpp" bodystart="78" bodyend="82"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d2/d4a/classGeneralVertex_1a2b9b73449a3d78f260cb929b0be99977" compoundref="d1/d2d/vertex_8hpp" startline="456">GeneralVertex&lt; Q, symmtype, differentiated &gt;::vertex</references>
      </memberdef>
      <memberdef kind="function" id="d7/d97/classState_1a54a61d0e029565105bfc668949ce6611" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">auto</ref></type>
        <definition>auto State&lt; Q, differentiated &gt;::operator+=</definition>
        <argsstring>(const double alpha) -&gt; State</argsstring>
        <name>operator+=</name>
        <qualifiedname>State::operator+=</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> double</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="87" column="10" bodyfile="correlation_functions/state.hpp" bodystart="87" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="d7/d97/classState_1aed5d7d555218849fbd9e03df0fc7e006" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">auto</ref></type>
        <definition>auto State&lt; Q, differentiated &gt;::operator*=</definition>
        <argsstring>(const double &amp;alpha) -&gt; State</argsstring>
        <name>operator*=</name>
        <qualifiedname>State::operator*=</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> double &amp;</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="100" column="10" bodyfile="correlation_functions/state.hpp" bodystart="100" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="d7/d97/classState_1afecbd00b0fda604abb85ecf3d8423cc0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">auto</ref></type>
        <definition>auto State&lt; Q, differentiated &gt;::operator-=</definition>
        <argsstring>(const State &amp;state) -&gt; State</argsstring>
        <name>operator-=</name>
        <qualifiedname>State::operator-=</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d97/classState" kindref="compound">State</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="113" column="10" bodyfile="correlation_functions/state.hpp" bodystart="113" bodyend="117"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d2/d4a/classGeneralVertex_1a2b9b73449a3d78f260cb929b0be99977" compoundref="d1/d2d/vertex_8hpp" startline="456">GeneralVertex&lt; Q, symmtype, differentiated &gt;::vertex</references>
      </memberdef>
      <memberdef kind="function" id="d7/d97/classState_1a26e54b23b72447a7cc0b120c72af3180" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">auto</ref></type>
        <definition>auto State&lt; Q, differentiated &gt;::operator/=</definition>
        <argsstring>(const State &amp;state) -&gt; State</argsstring>
        <name>operator/=</name>
        <qualifiedname>State::operator/=</qualifiedname>
        <param>
          <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">const</ref> <ref refid="d7/d97/classState" kindref="compound">State</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="123" column="10" bodyfile="correlation_functions/state.hpp" bodystart="123" bodyend="127"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d2/d4a/classGeneralVertex_1a2b9b73449a3d78f260cb929b0be99977" compoundref="d1/d2d/vertex_8hpp" startline="456">GeneralVertex&lt; Q, symmtype, differentiated &gt;::vertex</references>
      </memberdef>
      <memberdef kind="function" id="d7/d97/classState_1aff40007121488153c21f0432e1cadf36" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">void</ref></type>
        <definition>void State&lt; Q, differentiated &gt;::check_resolution</definition>
        <argsstring>() const</argsstring>
        <name>check_resolution</name>
        <qualifiedname>State::check_resolution</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="133" column="10" bodyfile="correlation_functions/state.hpp" bodystart="192" bodyend="195"/>
        <references refid="d7/d97/classState_1ac676b4cfa39fb1439b345466ed92113f" compoundref="da/d3b/state_8hpp" startline="31">State&lt; Q, differentiated &gt;::selfenergy</references>
        <references refid="d7/d97/classState_1aa4c9989ea29c6f441ed84ce50334013d" compoundref="da/d3b/state_8hpp" startline="30">State&lt; Q, differentiated &gt;::vertex</references>
      </memberdef>
      <memberdef kind="function" id="d7/d97/classState_1a504a0b837e47e37e3cc638555a3fca63" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">void</ref></type>
        <definition>void State&lt; Q, differentiated &gt;::analyze_tails</definition>
        <argsstring>() const</argsstring>
        <name>analyze_tails</name>
        <qualifiedname>State::analyze_tails</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="135" column="10" bodyfile="correlation_functions/state.hpp" bodystart="197" bodyend="202"/>
        <references refid="d1/df8/master__parameters_8hpp_1a3dfa84f5ec32c85238883c47f2fadbaa" compoundref="d1/df8/master__parameters_8hpp" startline="34">MAX_DIAG_CLASS</references>
        <references refid="d7/d97/classState_1ac676b4cfa39fb1439b345466ed92113f" compoundref="da/d3b/state_8hpp" startline="31">State&lt; Q, differentiated &gt;::selfenergy</references>
        <references refid="d7/d97/classState_1aa4c9989ea29c6f441ed84ce50334013d" compoundref="da/d3b/state_8hpp" startline="30">State&lt; Q, differentiated &gt;::vertex</references>
      </memberdef>
      <memberdef kind="function" id="d7/d97/classState_1af8d534b130171535c9fbfb0cdb2ea0e5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">auto</ref></type>
        <definition>auto State&lt; Q, differentiated &gt;::abs</definition>
        <argsstring>() const -&gt; State&lt; Q, differentiated &gt;</argsstring>
        <name>abs</name>
        <qualifiedname>State::abs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="137" column="10" bodyfile="correlation_functions/state.hpp" bodystart="137" bodyend="144"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d97/classState_1ac676b4cfa39fb1439b345466ed92113f" compoundref="da/d3b/state_8hpp" startline="31">State&lt; Q, differentiated &gt;::selfenergy</references>
        <referencedby refid="da/d3b/state_8hpp_1a8c0105792a1452c363b13de73808e167" compoundref="da/d3b/state_8hpp" startline="225" endline="228">abs</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/d97/classState_1ac507d44949f78a583a7bed16fa9fcde9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" kindref="member">auto</ref></type>
        <definition>auto State&lt; Q, differentiated &gt;::norm</definition>
        <argsstring>() const -&gt; double</argsstring>
        <name>norm</name>
        <qualifiedname>State::norm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="correlation_functions/state.hpp" line="146" column="10" bodyfile="correlation_functions/state.hpp" bodystart="205" bodyend="210"/>
        <references refid="dd/dea/bubble__corrections_8hpp_1aff27784f97591f505f77ff0065ab57af" compoundref="dd/dea/bubble__corrections_8hpp" startline="295" endline="324">correctionFunctionBubble_REG3_Matsubara_PHS_diff</references>
        <references refid="d7/d97/classState_1ac676b4cfa39fb1439b345466ed92113f" compoundref="da/d3b/state_8hpp" startline="31">State&lt; Q, differentiated &gt;::selfenergy</references>
        <references refid="d7/d97/classState_1aa4c9989ea29c6f441ed84ce50334013d" compoundref="da/d3b/state_8hpp" startline="30">State&lt; Q, differentiated &gt;::vertex</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Define a struct object which includes the self-energy and the vertex which are needed to evaluate the RHS of the flow equations. Class used for the state Ψ = (Σ, Γ). <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>differentiated</parametername>
</parameternamelist>
<parameterdescription>
<para>Determines whether the state is differentiated.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Define essential data types: comp : complex number (complex&lt;double&gt;) glb_i : imaginary unit vec : vector class with additional functionality such as element-wise operations, real/imag part etc. <ref refid="d2/db2/structVertexInput" kindref="compound">VertexInput</ref> : auxiliary struct that contains all input variables of vertices</para>
<para>Functions to write/read a <ref refid="d7/d97/classState" kindref="compound">State</ref> object to/from an HDF5 file. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>State&lt; Q, differentiated &gt;</label>
        <link refid="d7/d97/classState"/>
      </node>
      <node id="2">
        <label>State&lt; Q, true &gt;</label>
        <link refid="d7/d97/classState"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; Q, true &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="17">
        <label>GeneralVertex&lt; Q, symmtype, differentiated &gt;</label>
        <link refid="d2/d4a/classGeneralVertex"/>
        <childnode refid="7" relation="usage">
          <edgelabel>-vertex</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>-vertex_half2</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>-vertex_nondifferentiated</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>+vertices_bubbleintegrand</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>+vanishing_component_gamma0</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>+vanishing_component_channel_a</edgelabel>
          <edgelabel>+vanishing_component_channel_p</edgelabel>
          <edgelabel>+vanishing_component_channel_t</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>GeneralVertex&lt; Q, false &gt;</label>
        <link refid="d2/d4a/classGeneralVertex"/>
        <childnode refid="7" relation="usage">
          <edgelabel>-vertex</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>-vertex_half2</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>-vertex_nondifferentiated</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>+vertices_bubbleintegrand</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>+vanishing_component_gamma0</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>+vanishing_component_channel_a</edgelabel>
          <edgelabel>+vanishing_component_channel_p</edgelabel>
          <edgelabel>+vanishing_component_channel_t</edgelabel>
        </childnode>
        <childnode refid="17" relation="template-instance">
          <edgelabel>&lt; Q, false &gt;</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>SelfEnergy&lt; Q &gt;</label>
      </node>
      <node id="1">
        <label>State&lt; Q, differentiated &gt;</label>
        <link refid="d7/d97/classState"/>
        <childnode refid="2" relation="usage">
          <edgelabel>+Lambda</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>+config</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>+vertex</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>+selfenergy</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>+initialized</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>T</label>
      </node>
      <node id="5">
        <label>bool</label>
        <link refid="d9/db9/classbool"/>
      </node>
      <node id="2">
        <label>double</label>
      </node>
      <node id="3">
        <label>fRG_config</label>
        <link refid="da/da0/structfRG__config"/>
        <childnode refid="4" relation="usage">
          <edgelabel>+nODE_</edgelabel>
          <edgelabel>+nloops</edgelabel>
          <edgelabel>+number_of_nodes</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>+Gamma</edgelabel>
          <edgelabel>+T</edgelabel>
          <edgelabel>+U</edgelabel>
          <edgelabel>+epsODE_abs_</edgelabel>
          <edgelabel>+epsODE_rel_</edgelabel>
          <edgelabel>+epsilon</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>+save_intermediateResults</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>fullvert&lt; Q &gt;</label>
      </node>
      <node id="4">
        <label>int</label>
      </node>
      <node id="9">
        <label>conditional_t&lt; differentiated, GeneralVertex&lt; Q, symmetric_full, false &gt;, double &gt;</label>
      </node>
      <node id="8">
        <label>conditional_t&lt; symmtype==non_symmetric_diffleft or symmtype==non_symmetric_diffright, fullvert&lt; Q &gt;, double &gt;</label>
      </node>
      <node id="11">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="12" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="12" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="12" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>vec&lt; T &gt;</label>
        <link refid="d9/d2a/classvec"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>vec&lt; bool &gt;</label>
        <link refid="d9/d2a/classvec"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
        <childnode refid="15" relation="template-instance">
          <edgelabel>&lt; bool &gt;</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>std::vector&lt; fullvert&lt; Q &gt; &gt;</label>
        <childnode refid="7" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
        <childnode refid="11" relation="template-instance">
          <edgelabel>&lt; fullvert&lt; Q &gt; &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="correlation_functions/state.hpp" line="23" column="1" bodyfile="correlation_functions/state.hpp" bodystart="23" bodyend="147"/>
    <listofallmembers>
      <member refid="d7/d97/classState_1af8d534b130171535c9fbfb0cdb2ea0e5" prot="public" virt="non-virtual"><scope>State</scope><name>abs</name></member>
      <member refid="d7/d97/classState_1a504a0b837e47e37e3cc638555a3fca63" prot="public" virt="non-virtual"><scope>State</scope><name>analyze_tails</name></member>
      <member refid="d7/d97/classState_1aff40007121488153c21f0432e1cadf36" prot="public" virt="non-virtual"><scope>State</scope><name>check_resolution</name></member>
      <member refid="d7/d97/classState_1ac71a138762ca873d09d4aa8de65791fd" prot="public" virt="non-virtual"><scope>State</scope><name>config</name></member>
      <member refid="d7/d97/classState_1a85527803dbcedce85301a0831b1c473d" prot="public" virt="non-virtual"><scope>State</scope><name>findBestFreqGrid</name></member>
      <member refid="d7/d97/classState_1a976ebaeffdb650be4c8a5b6f4c8479bd" prot="public" virt="non-virtual"><scope>State</scope><name>initialize</name></member>
      <member refid="d7/d97/classState_1ab065bd3e423a153db72513997aa374eb" prot="public" virt="non-virtual"><scope>State</scope><name>initialized</name></member>
      <member refid="d7/d97/classState_1a9e862ceeb13ad0e25034e81e87459265" prot="public" virt="non-virtual"><scope>State</scope><name>Lambda</name></member>
      <member refid="d7/d97/classState_1a3120a9f1788e0241307de564d616b8ef" prot="private" virt="non-virtual"><scope>State</scope><name>n_loop_flow</name></member>
      <member refid="d7/d97/classState_1ac507d44949f78a583a7bed16fa9fcde9" prot="public" virt="non-virtual"><scope>State</scope><name>norm</name></member>
      <member refid="d7/d97/classState_1ac2f8d0d41d43adbfd784e7679202aa7c" prot="public" virt="non-virtual"><scope>State</scope><name>operator*</name></member>
      <member refid="d7/d97/classState_1a5f6e5e422424afb07f5971624afce984" prot="public" virt="non-virtual"><scope>State</scope><name>operator*</name></member>
      <member refid="d7/d97/classState_1aed5d7d555218849fbd9e03df0fc7e006" prot="public" virt="non-virtual"><scope>State</scope><name>operator*=</name></member>
      <member refid="d7/d97/classState_1aa571f1fa98d97b8886fa827165578ae9" prot="public" virt="non-virtual"><scope>State</scope><name>operator+</name></member>
      <member refid="d7/d97/classState_1a16248a96ef07cce9233033a78c99ca14" prot="public" virt="non-virtual"><scope>State</scope><name>operator+</name></member>
      <member refid="d7/d97/classState_1a771d4f846e96da303b18575fdab3f92f" prot="public" virt="non-virtual"><scope>State</scope><name>operator+</name></member>
      <member refid="d7/d97/classState_1aceb570905ab47b961c43d16ac62a0dda" prot="public" virt="non-virtual"><scope>State</scope><name>operator+=</name></member>
      <member refid="d7/d97/classState_1a54a61d0e029565105bfc668949ce6611" prot="public" virt="non-virtual"><scope>State</scope><name>operator+=</name></member>
      <member refid="d7/d97/classState_1afb8c6f45132d5ace493863f6efb5e0d8" prot="public" virt="non-virtual"><scope>State</scope><name>operator-</name></member>
      <member refid="d7/d97/classState_1afecbd00b0fda604abb85ecf3d8423cc0" prot="public" virt="non-virtual"><scope>State</scope><name>operator-=</name></member>
      <member refid="d7/d97/classState_1ab532470735bf6ff419fa1c4c33f856ae" prot="public" virt="non-virtual"><scope>State</scope><name>operator/</name></member>
      <member refid="d7/d97/classState_1a26e54b23b72447a7cc0b120c72af3180" prot="public" virt="non-virtual"><scope>State</scope><name>operator/=</name></member>
      <member refid="d7/d97/classState_1ac676b4cfa39fb1439b345466ed92113f" prot="public" virt="non-virtual"><scope>State</scope><name>selfenergy</name></member>
      <member refid="d7/d97/classState_1aa5e0b0c02b861f0cd2555ef34a4584b5" prot="public" virt="non-virtual"><scope>State</scope><name>set_frequency_grid</name></member>
      <member refid="d7/d97/classState_1a30b26f704a36218a0bb45a53c02fed53" prot="public" virt="non-virtual"><scope>State</scope><name>State</name></member>
      <member refid="d7/d97/classState_1a33aa01d752071307a5680a52d333b249" prot="public" virt="non-virtual"><scope>State</scope><name>State</name></member>
      <member refid="d7/d97/classState_1a6d532d97650453f6f56bdc581a346b36" prot="public" virt="non-virtual"><scope>State</scope><name>State</name></member>
      <member refid="d7/d97/classState_1a036493f1c5bca2ea04c17372658f895e" prot="public" virt="non-virtual"><scope>State</scope><name>State</name></member>
      <member refid="d7/d97/classState_1a1c726a8cf958e5253a4a871b1ddea67c" prot="private" virt="non-virtual"><scope>State</scope><name>test_PT_state</name></member>
      <member refid="d7/d97/classState_1a62a12cb0350fa1a06f9b68d257bbfa8c" prot="public" virt="non-virtual"><scope>State</scope><name>update_grid</name></member>
      <member refid="d7/d97/classState_1aa4c9989ea29c6f441ed84ce50334013d" prot="public" virt="non-virtual"><scope>State</scope><name>vertex</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
